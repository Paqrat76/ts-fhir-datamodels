// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-CodeableConcept 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for CodeableConcept Type: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
  "fhirCoreImports": [
    "DataType",
    "FhirDataTypeParser",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "StringType",
    "assertFhirType",
    "assertFhirTypeList",
    "copyListValues",
    "fhirString",
    "fhirStringSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isDefinedList",
    "isElementEmpty",
    "isEmpty",
    "parseFhirPrimitiveData",
    "parseStringType",
    "setFhirComplexListJson",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "Coding",
    "PARSABLE_DATATYPE_MAP",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "CodeableConcept",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "CodeableConcept",
    "elementDefinitions": [
      {
        "cardinality": "0..*",
        "comment": "Codes may be defined very casually in enumerations, or code lists, up to very formal definitions such as SNOMED CT - see the HL7 v3 Core Principles for more information.  Ordering of codings is undefined and SHALL NOT be used to infer meaning. Generally, at most only one of the coding values will be labeled as UserSelected = true.",
        "definition": "A reference to a code defined by a terminology system.",
        "fieldIdentifierName": "coding",
        "fieldName": "coding",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "CodeableConcept.coding",
        "requirements": "Allows for alternative encodings within a code system, and translations to other code systems.",
        "short": "Code defined by a terminology system",
        "type": {
          "code": "Coding",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Coding",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Very often the text is the same as a displayName of one of the codings.",
        "definition": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
        "fieldIdentifierName": "text",
        "fieldName": "text",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "CodeableConcept.text",
        "requirements": "The codes from the terminologies do not always capture the correct meaning with all the nuances of the human using them, or sometimes there is no appropriate code at all. In these cases, the text is used to capture the full meaning of the source.",
        "short": "Plain text representation of the concept",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "DataType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "StringType",
      "assertFhirType",
      "assertFhirTypeList",
      "copyListValues",
      "fhirString",
      "fhirStringSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isDefinedList",
      "isElementEmpty",
      "isEmpty",
      "parseFhirPrimitiveData",
      "parseStringType",
      "setFhirComplexListJson",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "Coding",
      "PARSABLE_DATATYPE_MAP",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": false,
    "hasOnlyOnePrimitiveField": true,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "CodeableConcept",
    "parentKind": "complex-type",
    "parentName": "CodeableConcept",
    "parentType": "CodeableConcept",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/CodeableConcept",
    "requiredConstructor": false,
    "rootElement": {
      "comment": "Not all terminology uses fit this general pattern. In some cases, models should not use CodeableConcept and use Coding directly and provide their own structure for managing text, codings, translations and the relationship between elements and pre- and post-coordination.",
      "definition": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "requirements": undefined,
      "short": "Concept - reference to a terminology or just  text",
    },
  },
  "purpose": "This is a common pattern in healthcare - a concept that may be defined by one or more codes from formal definitions including LOINC and SNOMED CT, and/or defined by the provision of text that captures a human sense of the concept.",
  "type": "CodeableConcept",
  "url": "http://hl7.org/fhir/StructureDefinition/CodeableConcept",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-Coding 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for Coding Type: A reference to a code defined by a terminology system.",
  "fhirCoreImports": [
    "BooleanType",
    "CodeType",
    "DataType",
    "FhirDataTypeParser",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "StringType",
    "UriType",
    "assertFhirType",
    "fhirBoolean",
    "fhirBooleanSchema",
    "fhirCode",
    "fhirCodeSchema",
    "fhirString",
    "fhirStringSchema",
    "fhirUri",
    "fhirUriSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isElementEmpty",
    "isEmpty",
    "parseBooleanType",
    "parseCodeType",
    "parseFhirPrimitiveData",
    "parseStringType",
    "parseUriType",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "PARSABLE_DATATYPE_MAP",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "Coding",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "Coding",
    "elementDefinitions": [
      {
        "cardinality": "0..1",
        "comment": "The URI may be an OID (urn:oid:...) or a UUID (urn:uuid:...).  OIDs and UUIDs SHALL be references to the HL7 OID registry. Otherwise, the URI should come from HL7\\'s list of FHIR defined special URIs or it should reference to some definition that establishes the system clearly and unambiguously.",
        "definition": "The identification of the code system that defines the meaning of the symbol in the code.",
        "fieldIdentifierName": "system",
        "fieldName": "system",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Coding.system",
        "requirements": "Need to be unambiguous about the source of the definition of the symbol.",
        "short": "Identity of the terminology system",
        "type": {
          "code": "UriType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "uri",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Where the terminology does not clearly define what string should be used to identify code system versions, the recommendation is to use the date (expressed in FHIR date format) on which that version was officially published as the version date.",
        "definition": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
        "fieldIdentifierName": "version",
        "fieldName": "version",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Coding.version",
        "requirements": undefined,
        "short": "Version of the system - if relevant",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
        "fieldIdentifierName": "code",
        "fieldName": "code",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Coding.code",
        "requirements": "Need to refer to a particular code in the system.",
        "short": "Symbol in syntax defined by the system",
        "type": {
          "code": "CodeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "A representation of the meaning of the code in the system, following the rules of the system.",
        "fieldIdentifierName": "display",
        "fieldName": "display",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Coding.display",
        "requirements": "Need to be able to carry a human-readable meaning of the code for readers that do not know  the system.",
        "short": "Representation defined by the system",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Amongst a set of alternatives, a directly chosen code is the most appropriate starting point for new translations. There is some ambiguity about what exactly \\'directly chosen\\' implies, and trading partner agreement may be needed to clarify the use of this element and its consequences more completely.",
        "definition": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
        "fieldIdentifierName": "userSelected",
        "fieldName": "userSelected",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Coding.userSelected",
        "requirements": "This has been identified as a clinical safety criterium - that this exact system/code pair was chosen explicitly, rather than inferred by the system based on some rules or language processing.",
        "short": "If this coding was chosen directly by the user",
        "type": {
          "code": "BooleanType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "boolean",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "boolean",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "BooleanType",
      "CodeType",
      "DataType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "StringType",
      "UriType",
      "assertFhirType",
      "fhirBoolean",
      "fhirBooleanSchema",
      "fhirCode",
      "fhirCodeSchema",
      "fhirString",
      "fhirStringSchema",
      "fhirUri",
      "fhirUriSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isElementEmpty",
      "isEmpty",
      "parseBooleanType",
      "parseCodeType",
      "parseFhirPrimitiveData",
      "parseStringType",
      "parseUriType",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "PARSABLE_DATATYPE_MAP",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": false,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "Coding",
    "parentKind": "complex-type",
    "parentName": "Coding",
    "parentType": "Coding",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Coding",
    "requiredConstructor": false,
    "rootElement": {
      "comment": "Codes may be defined very casually in enumerations or code lists, up to very formal definitions such as SNOMED CT - see the HL7 v3 Core Principles for more information.",
      "definition": "A reference to a code defined by a terminology system.",
      "requirements": undefined,
      "short": "A reference to a code defined by a terminology system",
    },
  },
  "purpose": "References to codes are very common in healthcare models.",
  "type": "Coding",
  "url": "http://hl7.org/fhir/StructureDefinition/Coding",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-ContactPoint 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for ContactPoint Type: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
  "fhirCoreImports": [
    "CodeType",
    "DataType",
    "EnumCodeType",
    "FhirDataTypeParser",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "PositiveIntType",
    "StringType",
    "assertEnumCodeType",
    "assertFhirType",
    "fhirCode",
    "fhirCodeSchema",
    "fhirPositiveInt",
    "fhirPositiveIntSchema",
    "fhirString",
    "fhirStringSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isElementEmpty",
    "isEmpty",
    "parseCodeType",
    "parseFhirPrimitiveData",
    "parsePositiveIntType",
    "parseStringType",
    "setFhirComplexJson",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "ContactPointSystemEnum",
    "ContactPointUseEnum",
    "PARSABLE_DATATYPE_MAP",
    "Period",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "ContactPoint",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "ContactPoint",
    "elementDefinitions": [
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
        "fieldIdentifierName": "system",
        "fieldName": "system",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "ContactPoint.system",
        "requirements": undefined,
        "short": "phone | fax | email | pager | url | sms | other",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "ContactPointSystemEnum",
          "codeSystemName": "ContactPointSystem",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Additional text data such as phone extension numbers, or notes about use of the contact are sometimes included in the value.",
        "definition": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).",
        "fieldIdentifierName": "value",
        "fieldName": "value",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "ContactPoint.value",
        "requirements": "Need to support legacy numbers that are not in a tightly controlled format.",
        "short": "The actual contact point details",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Applications can assume that a contact is current unless it explicitly says that it is temporary or old.",
        "definition": "Identifies the purpose for the contact point.",
        "fieldIdentifierName": "use",
        "fieldName": "use",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": true,
        "isModifierReason": "This is labeled as "Is Modifier" because applications should not mistake a temporary or old contact etc.for a current/permanent one",
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "ContactPoint.use",
        "requirements": "Need to track the way a person uses this contact, so a user can choose which is appropriate for their purpose.",
        "short": "home | work | temp | old | mobile - purpose of this contact point",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "ContactPointUseEnum",
          "codeSystemName": "ContactPointUse",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Note that rank does not necessarily follow the order in which the contacts are represented in the instance.",
        "definition": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.",
        "fieldIdentifierName": "rank",
        "fieldName": "rank",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "ContactPoint.rank",
        "requirements": undefined,
        "short": "Specify preferred order of use (1 = highest)",
        "type": {
          "code": "PositiveIntType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "positiveInt",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "number",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "Time period when the contact point was/is in use.",
        "fieldIdentifierName": "period",
        "fieldName": "period",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "ContactPoint.period",
        "requirements": undefined,
        "short": "Time period when the contact point was/is in use",
        "type": {
          "code": "Period",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Period",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "CodeType",
      "DataType",
      "EnumCodeType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "PositiveIntType",
      "StringType",
      "assertEnumCodeType",
      "assertFhirType",
      "fhirCode",
      "fhirCodeSchema",
      "fhirPositiveInt",
      "fhirPositiveIntSchema",
      "fhirString",
      "fhirStringSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isElementEmpty",
      "isEmpty",
      "parseCodeType",
      "parseFhirPrimitiveData",
      "parsePositiveIntType",
      "parseStringType",
      "setFhirComplexJson",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "ContactPointSystemEnum",
      "ContactPointUseEnum",
      "PARSABLE_DATATYPE_MAP",
      "Period",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": true,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "ContactPoint",
    "parentKind": "complex-type",
    "parentName": "ContactPoint",
    "parentType": "ContactPoint",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/ContactPoint",
    "requiredConstructor": true,
    "rootElement": {
      "comment": undefined,
      "definition": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
      "requirements": undefined,
      "short": "Details of a Technology mediated contact point (phone, fax, email, etc.)",
    },
  },
  "purpose": "Need to track phone, fax, mobile, sms numbers, email addresses, twitter tags, etc.",
  "type": "ContactPoint",
  "url": "http://hl7.org/fhir/StructureDefinition/ContactPoint",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-Duration 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for Duration Type: A length of time.",
  "fhirCoreImports": [
    "CodeType",
    "DataType",
    "DecimalType",
    "FhirDataTypeParser",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "StringType",
    "UriType",
    "assertFhirType",
    "fhirCode",
    "fhirCodeSchema",
    "fhirDecimal",
    "fhirDecimalSchema",
    "fhirString",
    "fhirStringSchema",
    "fhirUri",
    "fhirUriSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isElementEmpty",
    "isEmpty",
    "parseCodeType",
    "parseDecimalType",
    "parseFhirPrimitiveData",
    "parseStringType",
    "parseUriType",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "PARSABLE_DATATYPE_MAP",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "Duration",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "Duration",
    "elementDefinitions": [
      {
        "cardinality": "0..1",
        "comment": "The implicit precision in the value should always be honored. Monetary values have their own rules for handling precision (refer to standard accounting text books).",
        "definition": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
        "fieldIdentifierName": "value",
        "fieldName": "value",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Duration.value",
        "requirements": "Precision is handled implicitly in almost all cases of measurement.",
        "short": "Numerical value (with implicit precision)",
        "type": {
          "code": "DecimalType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "decimal",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "number",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.",
        "fieldIdentifierName": "comparator",
        "fieldName": "comparator",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": true,
        "isModifierReason": "This is labeled as "Is Modifier" because the comparator modifies the interpretation of the value significantly. If there is no comparator, then there is no modification of the value",
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Duration.comparator",
        "requirements": "Need a framework for handling measures where the value is <5ug/L or >400mg/L due to the limitations of measuring methodology.",
        "short": "< | <= | >= | > - how to understand the value",
        "type": {
          "code": "CodeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "A human-readable form of the unit.",
        "fieldIdentifierName": "unit",
        "fieldName": "unit",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Duration.unit",
        "requirements": "There are many representations for units of measure and in many contexts, particular representations are fixed and required. I.e. mcg for micrograms.",
        "short": "Unit representation",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "The identification of the system that provides the coded form of the unit.",
        "fieldIdentifierName": "system",
        "fieldName": "system",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Duration.system",
        "requirements": "Need to know the system that defines the coded form of the unit.",
        "short": "System that defines coded unit form",
        "type": {
          "code": "UriType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "uri",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "The preferred system is UCUM, but SNOMED CT can also be used (for customary units) or ISO 4217 for currency.  The context of use may additionally require a code from a particular system.",
        "definition": "A computer processable form of the unit in some unit representation system.",
        "fieldIdentifierName": "code",
        "fieldName": "code",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Duration.code",
        "requirements": "Need a computable form of the unit that is fixed across all forms. UCUM provides this for quantities, but SNOMED CT provides many units of interest.",
        "short": "Coded form of the unit",
        "type": {
          "code": "CodeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "CodeType",
      "DataType",
      "DecimalType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "StringType",
      "UriType",
      "assertFhirType",
      "fhirCode",
      "fhirCodeSchema",
      "fhirDecimal",
      "fhirDecimalSchema",
      "fhirString",
      "fhirStringSchema",
      "fhirUri",
      "fhirUriSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isElementEmpty",
      "isEmpty",
      "parseCodeType",
      "parseDecimalType",
      "parseFhirPrimitiveData",
      "parseStringType",
      "parseUriType",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "PARSABLE_DATATYPE_MAP",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": false,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "Duration",
    "parentKind": "complex-type",
    "parentName": "Duration",
    "parentType": "Duration",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Duration",
    "requiredConstructor": false,
    "rootElement": {
      "comment": "The context of use may frequently define what kind of quantity this is and therefore what kind of units can be used. The context of use may also restrict the values for the comparator.",
      "definition": "A length of time.",
      "requirements": undefined,
      "short": "A length of time",
    },
  },
  "purpose": undefined,
  "type": "Duration",
  "url": "http://hl7.org/fhir/StructureDefinition/Duration",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-Identifier 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for Identifier Type: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
  "fhirCoreImports": [
    "CodeType",
    "DataType",
    "EnumCodeType",
    "FhirDataTypeParser",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "StringType",
    "UriType",
    "assertEnumCodeType",
    "assertFhirType",
    "fhirCode",
    "fhirCodeSchema",
    "fhirString",
    "fhirStringSchema",
    "fhirUri",
    "fhirUriSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isElementEmpty",
    "isEmpty",
    "parseCodeType",
    "parseFhirPrimitiveData",
    "parseStringType",
    "parseUriType",
    "setFhirComplexJson",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "CodeableConcept",
    "IdentifierUseEnum",
    "PARSABLE_DATATYPE_MAP",
    "Period",
    "Reference",
    "ReferenceTargets",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "Identifier",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "Identifier",
    "elementDefinitions": [
      {
        "cardinality": "0..1",
        "comment": "Applications can assume that an identifier is permanent unless it explicitly says that it is temporary.",
        "definition": "The purpose of this identifier.",
        "fieldIdentifierName": "use",
        "fieldName": "use",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": true,
        "isModifierReason": "This is labeled as "Is Modifier" because applications should not mistake a temporary id for a permanent one.",
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Identifier.use",
        "requirements": "Allows the appropriate identifier for a particular context of use to be selected from among a set of identifiers.",
        "short": "usual | official | temp | secondary | old (If known)",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "IdentifierUseEnum",
          "codeSystemName": "IdentifierUse",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "This element deals only with general categories of identifiers.  It SHOULD not be used for codes that correspond 1..1 with the Identifier.system. Some identifiers may fall into multiple categories due to common usage.   Where the system is known, a type is unnecessary because the type is always part of the system definition. However systems often need to handle identifiers where the system is not known. There is not a 1:1 relationship between type and system, since many different systems have the same type.",
        "definition": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
        "fieldIdentifierName": "type_",
        "fieldName": "type",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Identifier.type",
        "requirements": "Allows users to make use of identifiers when the identifier system is not known.",
        "short": "Description of identifier",
        "type": {
          "code": "CodeableConcept",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "CodeableConcept",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Identifier.system is always case sensitive.",
        "definition": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
        "fieldIdentifierName": "system",
        "fieldName": "system",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Identifier.system",
        "requirements": "There are many sets  of identifiers.  To perform matching of two identifiers, we need to know what set we\\'re dealing with. The system identifies a particular set of unique identifiers.",
        "short": "The namespace for the identifier value",
        "type": {
          "code": "UriType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "uri",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "If the value is a full URI, then the system SHALL be urn:ietf:rfc:3986.  The value\\'s primary purpose is computational mapping.  As a result, it may be normalized for comparison purposes (e.g. removing non-significant whitespace, dashes, etc.)  A value formatted for human display can be conveyed using the [Rendered Value extension](https://hl7.org/fhir/extension-rendered-value.html). Identifier.value is to be treated as case sensitive unless knowledge of the Identifier.system allows the processer to be confident that non-case-sensitive processing is safe.",
        "definition": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
        "fieldIdentifierName": "value",
        "fieldName": "value",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Identifier.value",
        "requirements": undefined,
        "short": "The value that is unique",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "Time period during which identifier is/was valid for use.",
        "fieldIdentifierName": "period",
        "fieldName": "period",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Identifier.period",
        "requirements": undefined,
        "short": "Time period when id is/was valid for use",
        "type": {
          "code": "Period",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Period",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "The Identifier.assigner may omit the .reference element and only contain a .display element reflecting the name or other textual information about the assigning organization.",
        "definition": "Organization that issued/manages the identifier.",
        "fieldIdentifierName": "assigner",
        "fieldName": "assigner",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": true,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Identifier.assigner",
        "requirements": undefined,
        "short": "Organization that issued id (may be just text)",
        "type": {
          "code": "Reference",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Reference",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
          "targetResource": [
            "Organization",
          ],
        },
      },
    ],
    "fhirCoreImports": [
      "CodeType",
      "DataType",
      "EnumCodeType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "StringType",
      "UriType",
      "assertEnumCodeType",
      "assertFhirType",
      "fhirCode",
      "fhirCodeSchema",
      "fhirString",
      "fhirStringSchema",
      "fhirUri",
      "fhirUriSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isElementEmpty",
      "isEmpty",
      "parseCodeType",
      "parseFhirPrimitiveData",
      "parseStringType",
      "parseUriType",
      "setFhirComplexJson",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "CodeableConcept",
      "IdentifierUseEnum",
      "PARSABLE_DATATYPE_MAP",
      "Period",
      "Reference",
      "ReferenceTargets",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": true,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "Identifier",
    "parentKind": "complex-type",
    "parentName": "Identifier",
    "parentType": "Identifier",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Identifier",
    "requiredConstructor": true,
    "rootElement": {
      "comment": undefined,
      "definition": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
      "requirements": undefined,
      "short": "An identifier intended for computation",
    },
  },
  "purpose": "Need to be able to identify things with confidence and be sure that the identification is not subject to misinterpretation.",
  "type": "Identifier",
  "url": "http://hl7.org/fhir/StructureDefinition/Identifier",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-Meta 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for Meta Type: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
  "fhirCoreImports": [
    "CanonicalType",
    "DataType",
    "FhirDataTypeParser",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "IdType",
    "InstantType",
    "JSON",
    "PrimitiveTypeJson",
    "UriType",
    "assertFhirType",
    "assertFhirTypeList",
    "copyListValues",
    "fhirCanonical",
    "fhirCanonicalSchema",
    "fhirId",
    "fhirIdSchema",
    "fhirInstant",
    "fhirInstantSchema",
    "fhirUri",
    "fhirUriSchema",
    "getPrimitiveTypeJson",
    "getPrimitiveTypeListJson",
    "isDefined",
    "isDefinedList",
    "isElementEmpty",
    "isEmpty",
    "parseCanonicalType",
    "parseFhirPrimitiveData",
    "parseIdType",
    "parseInstantType",
    "parseUriType",
    "setFhirComplexListJson",
    "setFhirPrimitiveJson",
    "setFhirPrimitiveListJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "Coding",
    "PARSABLE_DATATYPE_MAP",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "Meta",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "Meta",
    "elementDefinitions": [
      {
        "cardinality": "0..1",
        "comment": "The server assigns this value, and ignores what the client specifies, except in the case that the server is imposing version integrity on updates/deletes.",
        "definition": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
        "fieldIdentifierName": "versionId",
        "fieldName": "versionId",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Meta.versionId",
        "requirements": undefined,
        "short": "Version specific identifier",
        "type": {
          "code": "IdType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "id",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "This value is always populated except when the resource is first being created. The server / resource manager sets this value; what a client provides is irrelevant. This is equivalent to the HTTP Last-Modified and SHOULD have the same value on a [read](https://hl7.org/fhir/http.html#read) interaction.",
        "definition": "When the resource last changed - e.g. when the version changed.",
        "fieldIdentifierName": "lastUpdated",
        "fieldName": "lastUpdated",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Meta.lastUpdated",
        "requirements": undefined,
        "short": "When the resource version last changed",
        "type": {
          "code": "InstantType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "instant",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "In the provenance resource, this corresponds to Provenance.entity.what[x]. The exact use of the source (and the implied Provenance.entity.role) is left to implementer discretion. Only one nominated source is allowed; for additional provenance details, a full Provenance resource should be used.  This element can be used to indicate where the current master source of a resource that has a canonical URL if the resource is no longer hosted at the canonical URL.",
        "definition": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](https://hl7.org/fhir/provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
        "fieldIdentifierName": "source",
        "fieldName": "source",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Meta.source",
        "requirements": undefined,
        "short": "Identifies where the resource comes from",
        "type": {
          "code": "UriType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "uri",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": "It is up to the server and/or other infrastructure of policy to determine whether/how these claims are verified and/or updated over time.  The list of profile URLs is a set.",
        "definition": "A list of profiles (references to [StructureDefinition](https://hl7.org/fhir/structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](https://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.url).",
        "fieldIdentifierName": "profile",
        "fieldName": "profile",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "Meta.profile",
        "requirements": undefined,
        "short": "Profiles this resource claims to conform to",
        "type": {
          "code": "CanonicalType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "canonical",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/StructureDefinition",
          ],
          "targetResource": [
            "StructureDefinition",
          ],
        },
      },
      {
        "cardinality": "0..*",
        "comment": "The security labels can be updated without changing the stated version of the resource. The list of security labels is a set. Uniqueness is based the system/code, and version and display are ignored.",
        "definition": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
        "fieldIdentifierName": "security",
        "fieldName": "security",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "Meta.security",
        "requirements": undefined,
        "short": "Security Labels applied to this resource",
        "type": {
          "code": "Coding",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Coding",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": "The tags can be updated without changing the stated version of the resource. The list of tags is a set. Uniqueness is based the system/code, and version and display are ignored.",
        "definition": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
        "fieldIdentifierName": "tag",
        "fieldName": "tag",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "Meta.tag",
        "requirements": undefined,
        "short": "Tags applied to this resource",
        "type": {
          "code": "Coding",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Coding",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "CanonicalType",
      "DataType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "IdType",
      "InstantType",
      "JSON",
      "PrimitiveTypeJson",
      "UriType",
      "assertFhirType",
      "assertFhirTypeList",
      "copyListValues",
      "fhirCanonical",
      "fhirCanonicalSchema",
      "fhirId",
      "fhirIdSchema",
      "fhirInstant",
      "fhirInstantSchema",
      "fhirUri",
      "fhirUriSchema",
      "getPrimitiveTypeJson",
      "getPrimitiveTypeListJson",
      "isDefined",
      "isDefinedList",
      "isElementEmpty",
      "isEmpty",
      "parseCanonicalType",
      "parseFhirPrimitiveData",
      "parseIdType",
      "parseInstantType",
      "parseUriType",
      "setFhirComplexListJson",
      "setFhirPrimitiveJson",
      "setFhirPrimitiveListJson",
    ],
    "generatedImports": [
      "Coding",
      "PARSABLE_DATATYPE_MAP",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": false,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "Meta",
    "parentKind": "complex-type",
    "parentName": "Meta",
    "parentType": "Meta",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Meta",
    "requiredConstructor": false,
    "rootElement": {
      "comment": undefined,
      "definition": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "requirements": undefined,
      "short": "Metadata about a resource",
    },
  },
  "purpose": undefined,
  "type": "Meta",
  "url": "http://hl7.org/fhir/StructureDefinition/Meta",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-Narrative 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for Narrative Type: A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
  "fhirCoreImports": [
    "CodeType",
    "DataType",
    "EnumCodeType",
    "FhirDataTypeParser",
    "FhirError",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "PrimitiveType",
    "REQUIRED_PROPERTIES_DO_NOT_EXIST",
    "REQUIRED_PROPERTIES_REQD_IN_JSON",
    "XhtmlType",
    "assertEnumCodeType",
    "assertFhirType",
    "assertIsDefined",
    "constructorCodeValueAsEnumCodeType",
    "fhirCode",
    "fhirCodeSchema",
    "fhirXhtml",
    "fhirXhtmlSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isElementEmpty",
    "isEmpty",
    "parseCodeType",
    "parseFhirPrimitiveData",
    "parseXhtmlType",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "NarrativeStatusEnum",
    "PARSABLE_DATATYPE_MAP",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "Narrative",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "Narrative",
    "elementDefinitions": [
      {
        "cardinality": "1..1",
        "comment": undefined,
        "definition": "The status of the narrative - whether it\\'s entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
        "fieldIdentifierName": "status",
        "fieldName": "status",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 1,
        "path": "Narrative.status",
        "requirements": undefined,
        "short": "generated | extensions | additional | empty",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "NarrativeStatusEnum",
          "codeSystemName": "NarrativeStatus",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "1..1",
        "comment": "The contents of the html element are an XHTML fragment containing only the basic html formatting elements described in chapters 7-11 and 15 of the HTML 4.0 standard, <a> elements (either name or href), images and internally contained stylesheets. The XHTML content SHALL NOT contain a head, a body, external stylesheet references, scripts, forms, base/link/xlink, frames, iframes and objects.",
        "definition": "The actual narrative content, a stripped down version of XHTML.",
        "fieldIdentifierName": "div",
        "fieldName": "div",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 1,
        "path": "Narrative.div",
        "requirements": undefined,
        "short": "Limited xhtml content",
        "type": {
          "code": "XhtmlType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "xhtml",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "CodeType",
      "DataType",
      "EnumCodeType",
      "FhirDataTypeParser",
      "FhirError",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "PrimitiveType",
      "REQUIRED_PROPERTIES_DO_NOT_EXIST",
      "REQUIRED_PROPERTIES_REQD_IN_JSON",
      "XhtmlType",
      "assertEnumCodeType",
      "assertFhirType",
      "assertIsDefined",
      "constructorCodeValueAsEnumCodeType",
      "fhirCode",
      "fhirCodeSchema",
      "fhirXhtml",
      "fhirXhtmlSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isElementEmpty",
      "isEmpty",
      "parseCodeType",
      "parseFhirPrimitiveData",
      "parseXhtmlType",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "NarrativeStatusEnum",
      "PARSABLE_DATATYPE_MAP",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": true,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": true,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 2,
    "parentFieldName": "Narrative",
    "parentKind": "complex-type",
    "parentName": "Narrative",
    "parentType": "Narrative",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Narrative",
    "requiredConstructor": true,
    "rootElement": {
      "comment": undefined,
      "definition": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
      "requirements": undefined,
      "short": "Human-readable summary of the resource (essential clinical and business information)",
    },
  },
  "purpose": undefined,
  "type": "Narrative",
  "url": "http://hl7.org/fhir/StructureDefinition/Narrative",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-Period 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for Period Type: A time period defined by a start and end date and optionally time.",
  "fhirCoreImports": [
    "DataType",
    "DateTimeType",
    "FhirDataTypeParser",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "assertFhirType",
    "fhirDateTime",
    "fhirDateTimeSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isElementEmpty",
    "isEmpty",
    "parseDateTimeType",
    "parseFhirPrimitiveData",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "PARSABLE_DATATYPE_MAP",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "Period",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "Period",
    "elementDefinitions": [
      {
        "cardinality": "0..1",
        "comment": "If the low element is missing, the meaning is that the low boundary is not known.",
        "definition": "The start of the period. The boundary is inclusive.",
        "fieldIdentifierName": "start",
        "fieldName": "start",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Period.start",
        "requirements": undefined,
        "short": "Starting time with inclusive boundary",
        "type": {
          "code": "DateTimeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "dateTime",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "The high value includes any matching date/time. i.e. 2012-02-03T10:00:00 is in a period that has an end value of 2012-02-03.",
        "definition": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.",
        "fieldIdentifierName": "end",
        "fieldName": "end",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Period.end",
        "requirements": undefined,
        "short": "End time with inclusive boundary, if not ongoing",
        "type": {
          "code": "DateTimeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "dateTime",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "DataType",
      "DateTimeType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "assertFhirType",
      "fhirDateTime",
      "fhirDateTimeSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isElementEmpty",
      "isEmpty",
      "parseDateTimeType",
      "parseFhirPrimitiveData",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "PARSABLE_DATATYPE_MAP",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": false,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "Period",
    "parentKind": "complex-type",
    "parentName": "Period",
    "parentType": "Period",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Period",
    "requiredConstructor": false,
    "rootElement": {
      "comment": "A Period specifies a range of time; the context of use will specify whether the entire range applies (e.g. "the patient was an inpatient of the hospital for this time range") or one value from the range applies (e.g. "give to the patient between these two times"). Period is not used for a duration (a measure of elapsed time). See [Duration](https://hl7.org/fhir/datatypes.html#Duration).",
      "definition": "A time period defined by a start and end date and optionally time.",
      "requirements": undefined,
      "short": "Time range defined by start and end date/time",
    },
  },
  "purpose": undefined,
  "type": "Period",
  "url": "http://hl7.org/fhir/StructureDefinition/Period",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-Reference 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for Reference Type: A reference from one resource to another.",
  "fhirCoreImports": [
    "DataType",
    "FhirDataTypeParser",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "StringType",
    "UriType",
    "assertFhirType",
    "fhirString",
    "fhirStringSchema",
    "fhirUri",
    "fhirUriSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isElementEmpty",
    "isEmpty",
    "parseFhirPrimitiveData",
    "parseStringType",
    "parseUriType",
    "setFhirComplexJson",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "Identifier",
    "PARSABLE_DATATYPE_MAP",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "Reference",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "Reference",
    "elementDefinitions": [
      {
        "cardinality": "0..1",
        "comment": "Using absolute URLs provides a stable scalable approach suitable for a cloud/web context, while using relative/logical references provides a flexible approach suitable for use when trading across closed eco-system boundaries.   Absolute URLs do not need to point to a FHIR RESTful server, though this is the preferred approach. If the URL conforms to the structure "/[type]/[id]" then it should be assumed that the reference is to a FHIR RESTful server.",
        "definition": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with \\'#\\') refer to contained resources.",
        "fieldIdentifierName": "reference",
        "fieldName": "reference",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Reference.reference",
        "requirements": undefined,
        "short": "Literal reference, Relative, internal or absolute URL",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "This element is used to indicate the type of  the target of the reference. This may be used which ever of the other elements are populated (or not). In some cases, the type of the target may be determined by inspection of the reference (e.g. a RESTful URL) or by resolving the target of the reference; if both the type and a reference is provided, the reference SHALL resolve to a resource of the same type as that specified.",
        "definition": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. "Patient" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
        "fieldIdentifierName": "type_",
        "fieldName": "type",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Reference.type",
        "requirements": undefined,
        "short": "Type the reference refers to (e.g. "Patient")",
        "type": {
          "code": "UriType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "uri",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "When an identifier is provided in place of a reference, any system processing the reference will only be able to resolve the identifier to a reference if it understands the business context in which the identifier is used. Sometimes this is global (e.g. a national identifier) but often it is not. For this reason, none of the useful mechanisms described for working with references (e.g. chaining, includes) are possible, nor should servers be expected to be able resolve the reference. Servers may accept an identifier based reference untouched, resolve it, and/or reject it - see CapabilityStatement.rest.resource.referencePolicy.  When both an identifier and a literal reference are provided, the literal reference is preferred. Applications processing the resource are allowed - but not required - to check that the identifier matches the literal reference Applications converting a logical reference to a literal reference may choose to leave the logical reference present, or remove it. Reference is intended to point to a structure that can potentially be expressed as a FHIR resource, though there is no need for it to exist as an actual FHIR resource instance - except in as much as an application wishes to actual find the target of the reference. The content referred to be the identifier must meet the logical constraints implied by any limitations on what resource types are permitted for the reference.  For example, it would not be legitimate to send the identifier for a drug prescription if the type were Reference(Observation|DiagnosticReport).  One of the use-cases for Reference.identifier is the situation where no FHIR representation exists (where the type is Reference (Any).",
        "definition": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
        "fieldIdentifierName": "identifier",
        "fieldName": "identifier",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Reference.identifier",
        "requirements": undefined,
        "short": "Logical reference, when literal reference is not known",
        "type": {
          "code": "Identifier",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Identifier",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "This is generally not the same as the Resource.text of the referenced resource.  The purpose is to identify what\\'s being referenced, not to fully describe it.",
        "definition": "Plain text narrative that identifies the resource in addition to the resource reference.",
        "fieldIdentifierName": "display",
        "fieldName": "display",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Reference.display",
        "requirements": undefined,
        "short": "Text alternative for the resource",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "DataType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "StringType",
      "UriType",
      "assertFhirType",
      "fhirString",
      "fhirStringSchema",
      "fhirUri",
      "fhirUriSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isElementEmpty",
      "isEmpty",
      "parseFhirPrimitiveData",
      "parseStringType",
      "parseUriType",
      "setFhirComplexJson",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "Identifier",
      "PARSABLE_DATATYPE_MAP",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": false,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "Reference",
    "parentKind": "complex-type",
    "parentName": "Reference",
    "parentType": "Reference",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Reference",
    "requiredConstructor": false,
    "rootElement": {
      "comment": "References SHALL be a reference to an actual FHIR resource, and SHALL be resolveable (allowing for access control, temporary unavailability, etc.). Resolution can be either by retrieval from the URL, or, where applicable by resource type, by treating an absolute reference as a canonical URL and looking it up in a local registry/repository.",
      "definition": "A reference from one resource to another.",
      "requirements": undefined,
      "short": "A reference from one resource to another",
    },
  },
  "purpose": undefined,
  "type": "Reference",
  "url": "http://hl7.org/fhir/StructureDefinition/Reference",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-Signature 1`] = `
{
  "baseDefinitionType": "DataType",
  "childComponents": undefined,
  "description": "Base StructureDefinition for Signature Type: A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
  "fhirCoreImports": [
    "Base64BinaryType",
    "CodeType",
    "DataType",
    "FhirDataTypeParser",
    "FhirError",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "InstantType",
    "JSON",
    "PrimitiveType",
    "REQUIRED_PROPERTIES_DO_NOT_EXIST",
    "REQUIRED_PROPERTIES_REQD_IN_JSON",
    "assertFhirType",
    "assertFhirTypeList",
    "assertIsDefined",
    "assertIsDefinedList",
    "copyListValues",
    "fhirBase64Binary",
    "fhirBase64BinarySchema",
    "fhirCode",
    "fhirCodeSchema",
    "fhirInstant",
    "fhirInstantSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isDefinedList",
    "isElementEmpty",
    "isEmpty",
    "parseBase64BinaryType",
    "parseCodeType",
    "parseFhirPrimitiveData",
    "parseInstantType",
    "setFhirComplexJson",
    "setFhirComplexListJson",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "Coding",
    "PARSABLE_DATATYPE_MAP",
    "Reference",
    "ReferenceTargets",
  ],
  "hasChildComponents": false,
  "hasSymbolMetadata": false,
  "kind": "complex-type",
  "name": "Signature",
  "parentComponent": {
    "baseDefinitionType": "DataType",
    "componentName": "Signature",
    "elementDefinitions": [
      {
        "cardinality": "1..*",
        "comment": "Examples include attesting to: authorship, correct transcription, and witness of specific event. Also known as a &quot;Commitment Type Indication&quot;.",
        "definition": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
        "fieldIdentifierName": "type_",
        "fieldName": "type",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": false,
        "isRequiredList": true,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 1,
        "path": "Signature.type",
        "requirements": undefined,
        "short": "Indication of the reason the entity signed the object(s)",
        "type": {
          "code": "Coding",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Coding",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "1..1",
        "comment": "This should agree with the information in the signature.",
        "definition": "When the digital signature was signed.",
        "fieldIdentifierName": "when",
        "fieldName": "when",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 1,
        "path": "Signature.when",
        "requirements": undefined,
        "short": "When the signature was created",
        "type": {
          "code": "InstantType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "instant",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "1..1",
        "comment": "This should agree with the information in the signature.",
        "definition": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).",
        "fieldIdentifierName": "who",
        "fieldName": "who",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": true,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 1,
        "path": "Signature.who",
        "requirements": undefined,
        "short": "Who signed",
        "type": {
          "code": "Reference",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Reference",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
            "http://hl7.org/fhir/StructureDefinition/RelatedPerson",
            "http://hl7.org/fhir/StructureDefinition/Patient",
            "http://hl7.org/fhir/StructureDefinition/Device",
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
          "targetResource": [
            "Practitioner",
            "PractitionerRole",
            "RelatedPerson",
            "Patient",
            "Device",
            "Organization",
          ],
        },
      },
      {
        "cardinality": "0..1",
        "comment": "The party that can\\'t sign. For example a child.",
        "definition": "A reference to an application-usable description of the identity that is represented by the signature.",
        "fieldIdentifierName": "onBehalfOf",
        "fieldName": "onBehalfOf",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": true,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Signature.onBehalfOf",
        "requirements": "used when the signature is on behalf of a non-signer.",
        "short": "The party represented",
        "type": {
          "code": "Reference",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Reference",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
            "http://hl7.org/fhir/StructureDefinition/RelatedPerson",
            "http://hl7.org/fhir/StructureDefinition/Patient",
            "http://hl7.org/fhir/StructureDefinition/Device",
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
          "targetResource": [
            "Practitioner",
            "PractitionerRole",
            "RelatedPerson",
            "Patient",
            "Device",
            "Organization",
          ],
        },
      },
      {
        "cardinality": "0..1",
        "comment": ""xml", "json" and "ttl" are allowed, which describe the simple encodings described in the specification (and imply appropriate bundle support). Otherwise, mime types are legal here.",
        "definition": "A mime type that indicates the technical format of the target resources signed by the signature.",
        "fieldIdentifierName": "targetFormat",
        "fieldName": "targetFormat",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "Signature.targetFormat",
        "requirements": undefined,
        "short": "The technical format of the signed resources",
        "type": {
          "code": "CodeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.",
        "fieldIdentifierName": "sigFormat",
        "fieldName": "sigFormat",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "Signature.sigFormat",
        "requirements": undefined,
        "short": "The technical format of the signature",
        "type": {
          "code": "CodeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Where the signature type is an XML DigSig, the signed content is a FHIR Resource(s), the signature is of the XML form of the Resource(s) using  XML-Signature (XMLDIG) "Detached Signature" form.",
        "definition": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.",
        "fieldIdentifierName": "data",
        "fieldName": "data",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "Signature.data",
        "requirements": undefined,
        "short": "The actual signature content (XML DigSig. JWS, picture, etc.)",
        "type": {
          "code": "Base64BinaryType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "base64Binary",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "Base64BinaryType",
      "CodeType",
      "DataType",
      "FhirDataTypeParser",
      "FhirError",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "InstantType",
      "JSON",
      "PrimitiveType",
      "REQUIRED_PROPERTIES_DO_NOT_EXIST",
      "REQUIRED_PROPERTIES_REQD_IN_JSON",
      "assertFhirType",
      "assertFhirTypeList",
      "assertIsDefined",
      "assertIsDefinedList",
      "copyListValues",
      "fhirBase64Binary",
      "fhirBase64BinarySchema",
      "fhirCode",
      "fhirCodeSchema",
      "fhirInstant",
      "fhirInstantSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isDefinedList",
      "isElementEmpty",
      "isEmpty",
      "parseBase64BinaryType",
      "parseCodeType",
      "parseFhirPrimitiveData",
      "parseInstantType",
      "setFhirComplexJson",
      "setFhirComplexListJson",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "Coding",
      "PARSABLE_DATATYPE_MAP",
      "Reference",
      "ReferenceTargets",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": false,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": true,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": true,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 3,
    "parentFieldName": "Signature",
    "parentKind": "complex-type",
    "parentName": "Signature",
    "parentType": "Signature",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Signature",
    "requiredConstructor": true,
    "rootElement": {
      "comment": "The elements of the Signature Resource are for ease of access of these elements. For digital signatures (Xml DigSig, JWS), the non-repudiation proof comes from the Signature  validation, which includes validation of the referenced objects (e.g. Resources) (a.k.a., Content) in the XML-Signature Detached form.",
      "definition": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
      "requirements": undefined,
      "short": "A Signature - XML DigSig, JWS, Graphical image of signature, etc.",
    },
  },
  "purpose": "There are a number of places where content must be signed in healthcare.",
  "type": "Signature",
  "url": "http://hl7.org/fhir/StructureDefinition/Signature",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties ComplexTypes HbsProperties should return the correct properties for StructureDefinition-Timing 1`] = `
{
  "baseDefinitionType": "BackboneType",
  "childComponents": [
    {
      "baseDefinitionType": "Element",
      "componentName": "TimingRepeatComponent",
      "elementDefinitions": [
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
          "fieldIdentifierName": "bounds",
          "fieldName": "bounds",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": true,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.bounds[x]",
          "requirements": undefined,
          "short": "Length/Range of lengths, or (Start and/or end) limits",
          "type": {
            "choiceDataTypes": [
              "Duration",
              "Range",
              "Period",
            ],
            "choiceTypes": [
              "Duration",
              "Range",
              "Period",
            ],
            "code": "DataType",
            "fhirDataType": "CHOICE",
          },
        },
        {
          "cardinality": "0..1",
          "comment": "If you have both bounds and count, then this should be understood as within the bounds period, until count times happens.",
          "definition": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.",
          "fieldIdentifierName": "count",
          "fieldName": "count",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.count",
          "requirements": "Repetitions may be limited by end time or total occurrences.",
          "short": "Number of times to repeat",
          "type": {
            "code": "PositiveIntType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "positiveInt",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
          "fieldIdentifierName": "countMax",
          "fieldName": "countMax",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.countMax",
          "requirements": undefined,
          "short": "Maximum number of times to repeat",
          "type": {
            "code": "PositiveIntType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "positiveInt",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": "For some events the duration is part of the definition of the event (e.g. IV infusions, where the duration is implicit in the specified quantity and rate). For others, it\\'s part of the timing specification (e.g. exercise).",
          "definition": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.",
          "fieldIdentifierName": "duration",
          "fieldName": "duration",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.duration",
          "requirements": "Some activities are not instantaneous and need to be maintained for a period of time.",
          "short": "How long when it happens",
          "type": {
            "code": "DecimalType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "decimal",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": "For some events the duration is part of the definition of the event (e.g. IV infusions, where the duration is implicit in the specified quantity and rate). For others, it\\'s part of the timing specification (e.g. exercise).",
          "definition": "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.",
          "fieldIdentifierName": "durationMax",
          "fieldName": "durationMax",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.durationMax",
          "requirements": "Some activities are not instantaneous and need to be maintained for a period of time.",
          "short": "How long when it happens (Max)",
          "type": {
            "code": "DecimalType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "decimal",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "The units of time for the duration, in UCUM units.",
          "fieldIdentifierName": "durationUnit",
          "fieldName": "durationUnit",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.durationUnit",
          "requirements": undefined,
          "short": "s | min | h | d | wk | mo | a - unit of time (UCUM)",
          "type": {
            "code": "CodeType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "code",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.",
          "fieldIdentifierName": "frequency",
          "fieldName": "frequency",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.frequency",
          "requirements": undefined,
          "short": "Event occurs frequency times per period",
          "type": {
            "code": "PositiveIntType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "positiveInt",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.",
          "fieldIdentifierName": "frequencyMax",
          "fieldName": "frequencyMax",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.frequencyMax",
          "requirements": undefined,
          "short": "Event occurs up to frequencyMax times per period",
          "type": {
            "code": "PositiveIntType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "positiveInt",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Indicates the duration of time over which repetitions are to occur; e.g. to express "3 times per day", 3 would be the frequency and "1 day" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.",
          "fieldIdentifierName": "period",
          "fieldName": "period",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.period",
          "requirements": undefined,
          "short": "Event occurs frequency times per period",
          "type": {
            "code": "DecimalType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "decimal",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as "do this once every 3-5 days.",
          "fieldIdentifierName": "periodMax",
          "fieldName": "periodMax",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.periodMax",
          "requirements": undefined,
          "short": "Upper limit of period (3-4 hours)",
          "type": {
            "code": "DecimalType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "decimal",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "The units of time for the period in UCUM units.",
          "fieldIdentifierName": "periodUnit",
          "fieldName": "periodUnit",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.periodUnit",
          "requirements": undefined,
          "short": "s | min | h | d | wk | mo | a - unit of time (UCUM)",
          "type": {
            "code": "CodeType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "code",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..*",
          "comment": "If no days are specified, the action is assumed to happen every day as otherwise specified. The elements frequency and period cannot be used as well as dayOfWeek.",
          "definition": "If one or more days of week is provided, then the action happens only on the specified day(s).",
          "fieldIdentifierName": "dayOfWeek",
          "fieldName": "dayOfWeek",
          "isArray": true,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": true,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": true,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "*",
          "min": 0,
          "path": "Timing.repeat.dayOfWeek",
          "requirements": undefined,
          "short": "mon | tue | wed | thu | fri | sat | sun",
          "type": {
            "code": "EnumCodeType",
            "codeSystemEnumName": "DaysOfWeekEnum",
            "codeSystemName": "DaysOfWeek",
            "fhirDataType": "code",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..*",
          "comment": "When time of day is specified, it is inferred that the action happens every day (as filtered by dayofWeek) on the specified times. The elements when, frequency and period cannot be used as well as timeOfDay.",
          "definition": "Specified time of day for action to take place.",
          "fieldIdentifierName": "timeOfDay",
          "fieldName": "timeOfDay",
          "isArray": true,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": true,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "*",
          "min": 0,
          "path": "Timing.repeat.timeOfDay",
          "requirements": undefined,
          "short": "Time of day for action",
          "type": {
            "code": "TimeType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "time",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..*",
          "comment": "When more than one event is listed, the event is tied to the union of the specified events.",
          "definition": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.",
          "fieldIdentifierName": "when",
          "fieldName": "when",
          "isArray": true,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": true,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "*",
          "min": 0,
          "path": "Timing.repeat.when",
          "requirements": "Timings are frequently determined by occurrences such as waking, eating and sleep.",
          "short": "Code for time period of occurrence",
          "type": {
            "code": "CodeType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "code",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.",
          "fieldIdentifierName": "offset",
          "fieldName": "offset",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Timing.repeat.offset",
          "requirements": undefined,
          "short": "Minutes from event (before or after)",
          "type": {
            "code": "UnsignedIntType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "unsignedInt",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
      ],
      "fhirCoreImports": [
        "ChoiceDataTypes",
        "ChoiceDataTypesMeta",
        "CodeType",
        "DataType",
        "DecimalType",
        "Element",
        "EnumCodeType",
        "FhirDataTypeParser",
        "IBase",
        "INSTANCE_EMPTY_ERROR_MSG",
        "InvalidTypeError",
        "JSON",
        "PositiveIntType",
        "PrimitiveTypeJson",
        "TimeType",
        "UnsignedIntType",
        "assertEnumCodeType",
        "assertEnumCodeTypeList",
        "assertFhirType",
        "assertFhirTypeList",
        "assertIsDefined",
        "copyListValues",
        "fhirCode",
        "fhirCodeSchema",
        "fhirDecimal",
        "fhirDecimalSchema",
        "fhirPositiveInt",
        "fhirPositiveIntSchema",
        "fhirTime",
        "fhirTimeSchema",
        "fhirUnsignedInt",
        "fhirUnsignedIntSchema",
        "getPrimitiveTypeJson",
        "getPrimitiveTypeListJson",
        "isDefined",
        "isDefinedList",
        "isElementEmpty",
        "isEmpty",
        "parseCodeType",
        "parseDecimalType",
        "parseFhirPrimitiveData",
        "parsePositiveIntType",
        "parseTimeType",
        "parseUnsignedIntType",
        "setFhirPrimitiveJson",
        "setFhirPrimitiveListJson",
        "setPolymorphicValueJson",
      ],
      "generatedImports": [
        "DaysOfWeekEnum",
        "Duration",
        "PARSABLE_DATATYPE_MAP",
        "Period",
        "Range",
      ],
      "hasChoiceFields": true,
      "hasCodeSystemEnums": true,
      "hasOnlyOnePrimitiveField": false,
      "hasParsableDataType": true,
      "hasParsableResource": false,
      "hasPrimitiveFields": true,
      "hasRequiredFields": false,
      "hasResourceFields": false,
      "isComponentBackboneElement": false,
      "isComponentBackboneType": false,
      "isComponentDataType": false,
      "isComponentDomainResource": false,
      "isComponentElement": true,
      "isComponentResource": false,
      "numRequiredFields": 0,
      "parentFieldName": "Timing.repeat",
      "parentKind": "complex-type",
      "parentName": "Timing",
      "parentType": "Timing",
      "parentUrl": "http://hl7.org/fhir/StructureDefinition/Timing",
      "requiredConstructor": true,
      "rootElement": {
        "comment": undefined,
        "componentLevel": 2,
        "componentName": "TimingRepeatComponent",
        "definition": "A set of rules that describe when the event is scheduled.",
        "path": "Timing.repeat",
        "requirements": "Many timing schedules are determined by regular repetitions.",
        "short": "When the event is to occur",
        "typeCode": "Element",
      },
    },
  ],
  "description": "Base StructureDefinition for Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
  "fhirCoreImports": [
    "BackboneType",
    "ChoiceDataTypes",
    "ChoiceDataTypesMeta",
    "CodeType",
    "DataType",
    "DateTimeType",
    "DecimalType",
    "Element",
    "EnumCodeType",
    "FhirDataTypeParser",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "InvalidTypeError",
    "JSON",
    "PositiveIntType",
    "PrimitiveTypeJson",
    "TimeType",
    "UnsignedIntType",
    "assertEnumCodeType",
    "assertEnumCodeTypeList",
    "assertFhirType",
    "assertFhirTypeList",
    "assertIsDefined",
    "copyListValues",
    "fhirCode",
    "fhirCodeSchema",
    "fhirDateTime",
    "fhirDateTimeSchema",
    "fhirDecimal",
    "fhirDecimalSchema",
    "fhirPositiveInt",
    "fhirPositiveIntSchema",
    "fhirTime",
    "fhirTimeSchema",
    "fhirUnsignedInt",
    "fhirUnsignedIntSchema",
    "getPrimitiveTypeJson",
    "getPrimitiveTypeListJson",
    "isDefined",
    "isDefinedList",
    "isElementEmpty",
    "isEmpty",
    "parseCodeType",
    "parseDateTimeType",
    "parseDecimalType",
    "parseFhirPrimitiveData",
    "parsePositiveIntType",
    "parseTimeType",
    "parseUnsignedIntType",
    "setFhirComplexJson",
    "setFhirPrimitiveJson",
    "setFhirPrimitiveListJson",
    "setPolymorphicValueJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "CodeableConcept",
    "DaysOfWeekEnum",
    "Duration",
    "PARSABLE_DATATYPE_MAP",
    "Period",
    "Range",
  ],
  "hasChildComponents": true,
  "hasSymbolMetadata": true,
  "kind": "complex-type",
  "name": "Timing",
  "parentComponent": {
    "baseDefinitionType": "BackboneType",
    "componentName": "Timing",
    "elementDefinitions": [
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "Identifies specific times when the event occurs.",
        "fieldIdentifierName": "event",
        "fieldName": "event",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "Timing.event",
        "requirements": "In a Medication Administration Record, for instance, you need to take a general specification, and turn it into a precise specification.",
        "short": "When the event occurs",
        "type": {
          "code": "DateTimeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "dateTime",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "A set of rules that describe when the event is scheduled.",
        "fieldIdentifierName": "repeat",
        "fieldName": "repeat",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Timing.repeat",
        "requirements": "Many timing schedules are determined by regular repetitions.",
        "short": "When the event is to occur",
        "type": {
          "code": "TimingRepeatComponent",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Element",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "BID etc. are defined as \\'at institutionally specified times\\'. For example, an institution may choose that BID is "always at 7am and 6pm".  If it is inappropriate for this choice to be made, the code BID should not be used. Instead, a distinct organization-specific code should be used in place of the HL7-defined BID code and/or a structured representation should be used (in this case, specifying the two event times).",
        "definition": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
        "fieldIdentifierName": "code",
        "fieldName": "code",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Timing.code",
        "requirements": undefined,
        "short": "BID | TID | QID | AM | PM | QD | QOD | +",
        "type": {
          "code": "CodeableConcept",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "CodeableConcept",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "BackboneType",
      "DateTimeType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "PrimitiveTypeJson",
      "assertFhirType",
      "assertFhirTypeList",
      "copyListValues",
      "fhirDateTime",
      "fhirDateTimeSchema",
      "getPrimitiveTypeJson",
      "getPrimitiveTypeListJson",
      "isDefined",
      "isDefinedList",
      "isElementEmpty",
      "isEmpty",
      "parseDateTimeType",
      "parseFhirPrimitiveData",
      "setFhirComplexJson",
      "setFhirPrimitiveJson",
      "setFhirPrimitiveListJson",
    ],
    "generatedImports": [
      "CodeableConcept",
      "PARSABLE_DATATYPE_MAP",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": false,
    "hasOnlyOnePrimitiveField": true,
    "hasParsableDataType": true,
    "hasParsableResource": false,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": true,
    "isComponentDataType": false,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "Timing",
    "parentKind": "complex-type",
    "parentName": "Timing",
    "parentType": "Timing",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Timing",
    "requiredConstructor": false,
    "rootElement": {
      "comment": "Describes the occurrence of an event that may occur multiple times. Timing schedules are used for specifying when events are expected or requested to occur, and may also be used to represent the summary of a past or ongoing event.  For simplicity, the definitions of Timing components are expressed as \\'future\\' events, but such components can also be used to describe historic or ongoing events. A Timing schedule can be a list of events and/or criteria for when the event happens, which can be expressed in a structured form and/or as a code. When both event and a repeating specification are provided, the list of events should be understood as an interpretation of the information in the repeat structure.",
      "definition": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
      "requirements": undefined,
      "short": "A timing schedule that specifies an event that may occur multiple times",
    },
  },
  "purpose": "Need to able to track proposed timing schedules. There are several different ways to do this: one or more specified times, a simple rules like three times a day, or  before/after meals.",
  "type": "Timing",
  "url": "http://hl7.org/fhir/StructureDefinition/Timing",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties Resources HbsProperties should return the correct properties for StructureDefinition-Bundle 1`] = `
{
  "baseDefinitionType": "Resource",
  "childComponents": [
    {
      "baseDefinitionType": "BackboneElement",
      "componentName": "BundleLinkComponent",
      "elementDefinitions": [
        {
          "cardinality": "1..1",
          "comment": undefined,
          "definition": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).",
          "fieldIdentifierName": "relation",
          "fieldName": "relation",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": true,
          "isRequiredItem": true,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 1,
          "path": "Bundle.link.relation",
          "requirements": undefined,
          "short": "See http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1",
          "type": {
            "code": "StringType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "string",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "1..1",
          "comment": undefined,
          "definition": "The reference details for the link.",
          "fieldIdentifierName": "url",
          "fieldName": "url",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": true,
          "isRequiredItem": true,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 1,
          "path": "Bundle.link.url",
          "requirements": undefined,
          "short": "Reference details for the link",
          "type": {
            "code": "UriType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "uri",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
      ],
      "fhirCoreImports": [
        "BackboneElement",
        "FhirDataTypeParser",
        "FhirError",
        "IBase",
        "INSTANCE_EMPTY_ERROR_MSG",
        "JSON",
        "PrimitiveType",
        "REQUIRED_PROPERTIES_DO_NOT_EXIST",
        "REQUIRED_PROPERTIES_REQD_IN_JSON",
        "StringType",
        "UriType",
        "assertFhirType",
        "assertIsDefined",
        "fhirString",
        "fhirStringSchema",
        "fhirUri",
        "fhirUriSchema",
        "getPrimitiveTypeJson",
        "isDefined",
        "isElementEmpty",
        "isEmpty",
        "parseFhirPrimitiveData",
        "parseStringType",
        "parseUriType",
        "setFhirPrimitiveJson",
      ],
      "generatedImports": [
        "PARSABLE_DATATYPE_MAP",
      ],
      "hasChoiceFields": false,
      "hasCodeSystemEnums": false,
      "hasOnlyOnePrimitiveField": false,
      "hasParsableDataType": true,
      "hasParsableResource": false,
      "hasPrimitiveFields": true,
      "hasRequiredFields": true,
      "hasResourceFields": false,
      "isComponentBackboneElement": true,
      "isComponentBackboneType": false,
      "isComponentDataType": false,
      "isComponentDomainResource": false,
      "isComponentElement": false,
      "isComponentResource": false,
      "numRequiredFields": 2,
      "parentFieldName": "Bundle.link",
      "parentKind": "resource",
      "parentName": "Bundle",
      "parentType": "Bundle",
      "parentUrl": "http://hl7.org/fhir/StructureDefinition/Bundle",
      "requiredConstructor": true,
      "rootElement": {
        "comment": "Both Bundle.link and Bundle.entry.link are defined to support providing additional context when Bundles are used (e.g. [HATEOAS](http://en.wikipedia.org/wiki/HATEOAS)).  Bundle.entry.link corresponds to links found in the HTTP header if the resource in the entry was [read](https://hl7.org/fhir/http.html#read) directly. This specification defines some specific uses of Bundle.link for [searching](https://hl7.org/fhir/search.html#conformance) and [paging](https://hl7.org/fhir/http.html#paging), but no specific uses for Bundle.entry.link, and no defined function in a transaction - the meaning is implementation specific.",
        "componentLevel": 2,
        "componentName": "BundleLinkComponent",
        "definition": "A series of links that provide context to this bundle.",
        "path": "Bundle.link",
        "requirements": undefined,
        "short": "Links related to this Bundle",
        "typeCode": "BackboneElement",
      },
    },
    {
      "baseDefinitionType": "BackboneElement",
      "componentName": "BundleEntryComponent",
      "elementDefinitions": [
        {
          "cardinality": "0..*",
          "comment": undefined,
          "definition": "A series of links that provide context to this entry.",
          "fieldIdentifierName": "link",
          "fieldName": "link",
          "isArray": true,
          "isBackboneType": true,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": true,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "*",
          "min": 0,
          "path": "Bundle.entry.link",
          "requirements": undefined,
          "short": "Links related to this entry",
          "type": {
            "code": "BundleLinkComponent",
            "fhirDataType": "BackboneElement",
          },
        },
        {
          "cardinality": "0..1",
          "comment": "fullUrl might not be [unique in the context of a resource](https://hl7.org/fhir/bundle.html#bundle-unique). Note that since [FHIR resources do not need to be served through the FHIR API](https://hl7.org/fhir/references.html), the fullURL might be a URN or an absolute URL that does not end with the logical id of the resource (Resource.id). However, but if the fullUrl does look like a RESTful server URL (e.g. meets the [regex](https://hl7.org/fhir/references.html#regex), then the \\'id\\' portion of the fullUrl SHALL end with the Resource.id. Note that the fullUrl is not the same as the canonical URL - it\\'s an absolute url for an endpoint serving the resource (these will happen to have the same value on the canonical server for the resource with the canonical URL).",
          "definition": "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that:  * fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle) * Results from operations might involve resources that are not identified.",
          "fieldIdentifierName": "fullUrl",
          "fieldName": "fullUrl",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.fullUrl",
          "requirements": undefined,
          "short": "URI for resource (Absolute URL server address or URI for UUID/OID)",
          "type": {
            "code": "UriType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "uri",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type.",
          "fieldIdentifierName": "resource",
          "fieldName": "resource",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": true,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.resource",
          "requirements": undefined,
          "short": "A resource in the bundle",
          "type": {
            "code": "Resource",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "Resource",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": undefined,
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Information about the search process that lead to the creation of this entry.",
          "fieldIdentifierName": "search",
          "fieldName": "search",
          "isArray": false,
          "isBackboneType": true,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.search",
          "requirements": undefined,
          "short": "Search related information",
          "type": {
            "code": "BundleEntrySearchComponent",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "BackboneElement",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": undefined,
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
          "fieldIdentifierName": "request",
          "fieldName": "request",
          "isArray": false,
          "isBackboneType": true,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.request",
          "requirements": undefined,
          "short": "Additional execution information (transaction/batch/history)",
          "type": {
            "code": "BundleEntryRequestComponent",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "BackboneElement",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": undefined,
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Indicates the results of processing the corresponding \\'request\\' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
          "fieldIdentifierName": "response",
          "fieldName": "response",
          "isArray": false,
          "isBackboneType": true,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.response",
          "requirements": undefined,
          "short": "Results of execution (transaction/batch/history)",
          "type": {
            "code": "BundleEntryResponseComponent",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "BackboneElement",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": undefined,
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
      ],
      "fhirCoreImports": [
        "BackboneElement",
        "FhirDataTypeParser",
        "IBase",
        "INSTANCE_EMPTY_ERROR_MSG",
        "JSON",
        "UriType",
        "assertFhirType",
        "assertFhirTypeList",
        "copyListValues",
        "fhirUri",
        "fhirUriSchema",
        "getPrimitiveTypeJson",
        "isDefined",
        "isDefinedList",
        "isElementEmpty",
        "isEmpty",
        "parseFhirPrimitiveData",
        "parseUriType",
        "setFhirBackboneElementJson",
        "setFhirBackboneElementListJson",
        "setFhirPrimitiveJson",
      ],
      "generatedImports": [
        "PARSABLE_DATATYPE_MAP",
        "Resource",
        "assertFhirResourceType",
        "setFhirResourceJson",
      ],
      "hasChoiceFields": false,
      "hasCodeSystemEnums": false,
      "hasOnlyOnePrimitiveField": true,
      "hasParsableDataType": true,
      "hasParsableResource": true,
      "hasPrimitiveFields": true,
      "hasRequiredFields": false,
      "hasResourceFields": true,
      "isComponentBackboneElement": true,
      "isComponentBackboneType": false,
      "isComponentDataType": false,
      "isComponentDomainResource": false,
      "isComponentElement": false,
      "isComponentResource": false,
      "numRequiredFields": 0,
      "parentFieldName": "Bundle.entry",
      "parentKind": "resource",
      "parentName": "Bundle",
      "parentType": "Bundle",
      "parentUrl": "http://hl7.org/fhir/StructureDefinition/Bundle",
      "requiredConstructor": false,
      "rootElement": {
        "comment": undefined,
        "componentLevel": 2,
        "componentName": "BundleEntryComponent",
        "definition": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
        "path": "Bundle.entry",
        "requirements": undefined,
        "short": "Entry in the bundle - will have a resource or information",
        "typeCode": "BackboneElement",
      },
    },
    {
      "baseDefinitionType": "BackboneElement",
      "componentName": "BundleEntrySearchComponent",
      "elementDefinitions": [
        {
          "cardinality": "0..1",
          "comment": "There is only one mode. In some corner cases, a resource may be included because it is both a match and an include. In these circumstances, \\'match\\' takes precedence.",
          "definition": "Why this entry is in the result set - whether it\\'s included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
          "fieldIdentifierName": "mode",
          "fieldName": "mode",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": true,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.search.mode",
          "requirements": undefined,
          "short": "match | include | outcome - why this is in the result set",
          "type": {
            "code": "EnumCodeType",
            "codeSystemEnumName": "SearchEntryModeEnum",
            "codeSystemName": "SearchEntryMode",
            "fhirDataType": "code",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": "Servers are not required to return a ranking score. 1 is most relevant, and 0 is least relevant. Often, search results are sorted by score, but the client may specify a different sort order. See [Patient Match](https://hl7.org/fhir/patient-operation-match.html) for the EMPI search which relates to this element.",
          "definition": "When searching, the server\\'s search ranking score for the entry.",
          "fieldIdentifierName": "score",
          "fieldName": "score",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.search.score",
          "requirements": undefined,
          "short": "Search ranking (between 0 and 1)",
          "type": {
            "code": "DecimalType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "decimal",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "number",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
      ],
      "fhirCoreImports": [
        "BackboneElement",
        "CodeType",
        "DecimalType",
        "EnumCodeType",
        "FhirDataTypeParser",
        "IBase",
        "INSTANCE_EMPTY_ERROR_MSG",
        "JSON",
        "assertEnumCodeType",
        "assertFhirType",
        "fhirCode",
        "fhirCodeSchema",
        "fhirDecimal",
        "fhirDecimalSchema",
        "getPrimitiveTypeJson",
        "isDefined",
        "isElementEmpty",
        "isEmpty",
        "parseCodeType",
        "parseDecimalType",
        "parseFhirPrimitiveData",
        "setFhirPrimitiveJson",
      ],
      "generatedImports": [
        "PARSABLE_DATATYPE_MAP",
        "SearchEntryModeEnum",
      ],
      "hasChoiceFields": false,
      "hasCodeSystemEnums": true,
      "hasOnlyOnePrimitiveField": false,
      "hasParsableDataType": true,
      "hasParsableResource": false,
      "hasPrimitiveFields": true,
      "hasRequiredFields": false,
      "hasResourceFields": false,
      "isComponentBackboneElement": true,
      "isComponentBackboneType": false,
      "isComponentDataType": false,
      "isComponentDomainResource": false,
      "isComponentElement": false,
      "isComponentResource": false,
      "numRequiredFields": 0,
      "parentFieldName": "Bundle.entry.search",
      "parentKind": "resource",
      "parentName": "Bundle",
      "parentType": "Bundle",
      "parentUrl": "http://hl7.org/fhir/StructureDefinition/Bundle",
      "requiredConstructor": true,
      "rootElement": {
        "comment": undefined,
        "componentLevel": 3,
        "componentName": "BundleEntrySearchComponent",
        "definition": "Information about the search process that lead to the creation of this entry.",
        "path": "Bundle.entry.search",
        "requirements": undefined,
        "short": "Search related information",
        "typeCode": "BackboneElement",
      },
    },
    {
      "baseDefinitionType": "BackboneElement",
      "componentName": "BundleEntryRequestComponent",
      "elementDefinitions": [
        {
          "cardinality": "1..1",
          "comment": undefined,
          "definition": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
          "fieldIdentifierName": "method",
          "fieldName": "method",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": true,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": false,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": true,
          "isRequiredItem": true,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 1,
          "path": "Bundle.entry.request.method",
          "requirements": undefined,
          "short": "GET | HEAD | POST | PUT | DELETE | PATCH",
          "type": {
            "code": "EnumCodeType",
            "codeSystemEnumName": "HttpVerbEnum",
            "codeSystemName": "HttpVerb",
            "fhirDataType": "code",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "1..1",
          "comment": "E.g. for a Patient Create, the method would be "POST" and the URL would be "Patient". For a Patient Update, the method would be PUT and the URL would be "Patient/[id]".",
          "definition": "The URL for this entry, relative to the root (the address to which the request is posted).",
          "fieldIdentifierName": "url",
          "fieldName": "url",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": true,
          "isRequiredItem": true,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 1,
          "path": "Bundle.entry.request.url",
          "requirements": undefined,
          "short": "URL for HTTP equivalent of this entry",
          "type": {
            "code": "UriType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "uri",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "If the ETag values match, return a 304 Not Modified status. See the API documentation for ["Conditional Read"](https://hl7.org/fhir/http.html#cread).",
          "fieldIdentifierName": "ifNoneMatch",
          "fieldName": "ifNoneMatch",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.request.ifNoneMatch",
          "requirements": undefined,
          "short": "For managing cache currency",
          "type": {
            "code": "StringType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "string",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Only perform the operation if the last updated date matches. See the API documentation for ["Conditional Read"](https://hl7.org/fhir/http.html#cread).",
          "fieldIdentifierName": "ifModifiedSince",
          "fieldName": "ifModifiedSince",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.request.ifModifiedSince",
          "requirements": undefined,
          "short": "For managing cache currency",
          "type": {
            "code": "InstantType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "instant",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Only perform the operation if the Etag value matches. For more information, see the API section ["Managing Resource Contention"](https://hl7.org/fhir/http.html#concurrency).",
          "fieldIdentifierName": "ifMatch",
          "fieldName": "ifMatch",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.request.ifMatch",
          "requirements": undefined,
          "short": "For managing update contention",
          "type": {
            "code": "StringType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "string",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for ["Conditional Create"](https://hl7.org/fhir/http.html#ccreate). This is just the query portion of the URL - what follows the "?" (not including the "?").",
          "fieldIdentifierName": "ifNoneExist",
          "fieldName": "ifNoneExist",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.request.ifNoneExist",
          "requirements": undefined,
          "short": "For conditional creates",
          "type": {
            "code": "StringType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "string",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
      ],
      "fhirCoreImports": [
        "BackboneElement",
        "CodeType",
        "EnumCodeType",
        "FhirDataTypeParser",
        "FhirError",
        "IBase",
        "INSTANCE_EMPTY_ERROR_MSG",
        "InstantType",
        "JSON",
        "PrimitiveType",
        "REQUIRED_PROPERTIES_DO_NOT_EXIST",
        "REQUIRED_PROPERTIES_REQD_IN_JSON",
        "StringType",
        "UriType",
        "assertEnumCodeType",
        "assertFhirType",
        "assertIsDefined",
        "constructorCodeValueAsEnumCodeType",
        "fhirCode",
        "fhirCodeSchema",
        "fhirInstant",
        "fhirInstantSchema",
        "fhirString",
        "fhirStringSchema",
        "fhirUri",
        "fhirUriSchema",
        "getPrimitiveTypeJson",
        "isDefined",
        "isElementEmpty",
        "isEmpty",
        "parseCodeType",
        "parseFhirPrimitiveData",
        "parseInstantType",
        "parseStringType",
        "parseUriType",
        "setFhirPrimitiveJson",
      ],
      "generatedImports": [
        "HttpVerbEnum",
        "PARSABLE_DATATYPE_MAP",
      ],
      "hasChoiceFields": false,
      "hasCodeSystemEnums": true,
      "hasOnlyOnePrimitiveField": false,
      "hasParsableDataType": true,
      "hasParsableResource": false,
      "hasPrimitiveFields": true,
      "hasRequiredFields": true,
      "hasResourceFields": false,
      "isComponentBackboneElement": true,
      "isComponentBackboneType": false,
      "isComponentDataType": false,
      "isComponentDomainResource": false,
      "isComponentElement": false,
      "isComponentResource": false,
      "numRequiredFields": 2,
      "parentFieldName": "Bundle.entry.request",
      "parentKind": "resource",
      "parentName": "Bundle",
      "parentType": "Bundle",
      "parentUrl": "http://hl7.org/fhir/StructureDefinition/Bundle",
      "requiredConstructor": true,
      "rootElement": {
        "comment": undefined,
        "componentLevel": 3,
        "componentName": "BundleEntryRequestComponent",
        "definition": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
        "path": "Bundle.entry.request",
        "requirements": undefined,
        "short": "Additional execution information (transaction/batch/history)",
        "typeCode": "BackboneElement",
      },
    },
    {
      "baseDefinitionType": "BackboneElement",
      "componentName": "BundleEntryResponseComponent",
      "elementDefinitions": [
        {
          "cardinality": "1..1",
          "comment": undefined,
          "definition": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
          "fieldIdentifierName": "status",
          "fieldName": "status",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": true,
          "isRequiredItem": true,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 1,
          "path": "Bundle.entry.response.status",
          "requirements": undefined,
          "short": "Status response code (text optional)",
          "type": {
            "code": "StringType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "string",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "The location header created by processing this operation, populated if the operation returns a location.",
          "fieldIdentifierName": "location",
          "fieldName": "location",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.response.location",
          "requirements": undefined,
          "short": "The location (if the operation returns a location)",
          "type": {
            "code": "UriType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "uri",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": "Etags match the Resource.meta.versionId. The ETag has to match the version id in the header if a resource is included.",
          "definition": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](https://hl7.org/fhir/http.html#versioning) and [Managing Resource Contention](https://hl7.org/fhir/http.html#concurrency)).",
          "fieldIdentifierName": "etag",
          "fieldName": "etag",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.response.etag",
          "requirements": undefined,
          "short": "The Etag for the resource (if relevant)",
          "type": {
            "code": "StringType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "string",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": "This has to match the same time in the meta header (meta.lastUpdated) if a resource is included.",
          "definition": "The date/time that the resource was modified on the server.",
          "fieldIdentifierName": "lastModified",
          "fieldName": "lastModified",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.response.lastModified",
          "requirements": undefined,
          "short": "Server\\'s date time modified",
          "type": {
            "code": "InstantType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "instant",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": "For a POST/PUT operation, this is the equivalent outcome that would be returned for prefer = operationoutcome - except that the resource is always returned whether or not the outcome is returned. This outcome is not used for error responses in batch/transaction, only for hints and warnings. In a batch operation, the error will be in Bundle.entry.response, and for transaction, there will be a single OperationOutcome instead of a bundle in the case of an error.",
          "definition": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.",
          "fieldIdentifierName": "outcome",
          "fieldName": "outcome",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": true,
          "isSummary": true,
          "max": "1",
          "min": 0,
          "path": "Bundle.entry.response.outcome",
          "requirements": undefined,
          "short": "OperationOutcome with hints and warnings (for batch/transaction)",
          "type": {
            "code": "Resource",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "Resource",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": undefined,
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
      ],
      "fhirCoreImports": [
        "BackboneElement",
        "FhirDataTypeParser",
        "FhirError",
        "IBase",
        "INSTANCE_EMPTY_ERROR_MSG",
        "InstantType",
        "JSON",
        "PrimitiveType",
        "REQUIRED_PROPERTIES_DO_NOT_EXIST",
        "REQUIRED_PROPERTIES_REQD_IN_JSON",
        "StringType",
        "UriType",
        "assertFhirType",
        "assertIsDefined",
        "fhirInstant",
        "fhirInstantSchema",
        "fhirString",
        "fhirStringSchema",
        "fhirUri",
        "fhirUriSchema",
        "getPrimitiveTypeJson",
        "isDefined",
        "isElementEmpty",
        "isEmpty",
        "parseFhirPrimitiveData",
        "parseInstantType",
        "parseStringType",
        "parseUriType",
        "setFhirPrimitiveJson",
      ],
      "generatedImports": [
        "PARSABLE_DATATYPE_MAP",
        "Resource",
        "assertFhirResourceType",
        "setFhirResourceJson",
      ],
      "hasChoiceFields": false,
      "hasCodeSystemEnums": false,
      "hasOnlyOnePrimitiveField": false,
      "hasParsableDataType": true,
      "hasParsableResource": true,
      "hasPrimitiveFields": true,
      "hasRequiredFields": true,
      "hasResourceFields": true,
      "isComponentBackboneElement": true,
      "isComponentBackboneType": false,
      "isComponentDataType": false,
      "isComponentDomainResource": false,
      "isComponentElement": false,
      "isComponentResource": false,
      "numRequiredFields": 1,
      "parentFieldName": "Bundle.entry.response",
      "parentKind": "resource",
      "parentName": "Bundle",
      "parentType": "Bundle",
      "parentUrl": "http://hl7.org/fhir/StructureDefinition/Bundle",
      "requiredConstructor": true,
      "rootElement": {
        "comment": undefined,
        "componentLevel": 3,
        "componentName": "BundleEntryResponseComponent",
        "definition": "Indicates the results of processing the corresponding \\'request\\' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
        "path": "Bundle.entry.response",
        "requirements": undefined,
        "short": "Results of execution (transaction/batch/history)",
        "typeCode": "BackboneElement",
      },
    },
  ],
  "description": "A container for a collection of resources.",
  "fhirCoreImports": [
    "BackboneElement",
    "CodeType",
    "DecimalType",
    "EnumCodeType",
    "FhirDataTypeParser",
    "FhirError",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "InstantType",
    "JSON",
    "PrimitiveType",
    "REQUIRED_PROPERTIES_DO_NOT_EXIST",
    "REQUIRED_PROPERTIES_REQD_IN_JSON",
    "StringType",
    "UnsignedIntType",
    "UriType",
    "assertEnumCodeType",
    "assertFhirType",
    "assertFhirTypeList",
    "assertIsDefined",
    "constructorCodeValueAsEnumCodeType",
    "copyListValues",
    "fhirCode",
    "fhirCodeSchema",
    "fhirDecimal",
    "fhirDecimalSchema",
    "fhirInstant",
    "fhirInstantSchema",
    "fhirString",
    "fhirStringSchema",
    "fhirUnsignedInt",
    "fhirUnsignedIntSchema",
    "fhirUri",
    "fhirUriSchema",
    "getPrimitiveTypeJson",
    "isDefined",
    "isDefinedList",
    "isElementEmpty",
    "isEmpty",
    "parseCodeType",
    "parseDecimalType",
    "parseFhirPrimitiveData",
    "parseInstantType",
    "parseStringType",
    "parseUnsignedIntType",
    "parseUriType",
    "setFhirBackboneElementJson",
    "setFhirBackboneElementListJson",
    "setFhirComplexJson",
    "setFhirPrimitiveJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "BundleTypeEnum",
    "FhirResourceParser",
    "FhirResourceType",
    "HttpVerbEnum",
    "Identifier",
    "PARSABLE_DATATYPE_MAP",
    "Resource",
    "SearchEntryModeEnum",
    "Signature",
    "assertFhirResourceType",
    "setFhirResourceJson",
  ],
  "hasChildComponents": true,
  "hasSymbolMetadata": false,
  "kind": "resource",
  "name": "Bundle",
  "parentComponent": {
    "baseDefinitionType": "Resource",
    "componentName": "Bundle",
    "elementDefinitions": [
      {
        "cardinality": "0..1",
        "comment": "Persistent identity generally only matters for batches of type Document, Message, and Collection. It would not normally be populated for search and history results and servers ignore Bundle.identifier when processing batches and transactions. For Documents  the .identifier SHALL be populated such that the .identifier is globally unique.",
        "definition": "A persistent identifier for the bundle that won\\'t change as a bundle is copied from server to server.",
        "fieldIdentifierName": "identifier",
        "fieldName": "identifier",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Bundle.identifier",
        "requirements": undefined,
        "short": "Persistent identifier for the bundle",
        "type": {
          "code": "Identifier",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Identifier",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "1..1",
        "comment": "It\\'s possible to use a bundle for other purposes (e.g. a document can be accepted as a transaction). This is primarily defined so that there can be specific rules for some of the bundle types.",
        "definition": "Indicates the purpose of this bundle - how it is intended to be used.",
        "fieldIdentifierName": "type_",
        "fieldName": "type",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 1,
        "path": "Bundle.type",
        "requirements": undefined,
        "short": "document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "BundleTypeEnum",
          "codeSystemName": "BundleType",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "For many bundles, the timestamp is equal to .meta.lastUpdated, because they are not stored (e.g. search results). When a bundle is placed in a persistent store, .meta.lastUpdated will be usually be changed by the server. When the bundle is a message, a middleware agent altering the message (even if not stored) SHOULD update .meta.lastUpdated. .timestamp is used to track the original time of the Bundle, and SHOULD be populated.   Usage: * document : the date the document was created. Note: the composition may predate the document, or be associated with multiple documents. The date of the composition - the authoring time - may be earlier than the document assembly time * message : the date that the content of the message was assembled. This date is not changed by middleware engines unless they add additional data that changes the meaning of the time of the message * history : the date that the history was assembled. This time would be used as the _since time to ask for subsequent updates * searchset : the time that the search set was assembled. Note that different pages MAY have different timestamps but need not. Having different timestamps does not imply that subsequent pages will represent or include changes made since the initial query * transaction | transaction-response | batch | batch-response | collection : no particular assigned meaning The timestamp value should be greater than the lastUpdated and other timestamps in the resources in the bundle, and it should be equal or earlier than the .meta.lastUpdated on the Bundle itself.",
        "definition": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.",
        "fieldIdentifierName": "timestamp",
        "fieldName": "timestamp",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Bundle.timestamp",
        "requirements": undefined,
        "short": "When the bundle was assembled",
        "type": {
          "code": "InstantType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "instant",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Only used if the bundle is a search result set. The total does not include resources such as OperationOutcome and included resources, only the total number of matching resources.",
        "definition": "If a set of search matches, this is the total number of entries of type \\'match\\' across all pages in the search.  It does not include search.mode = \\'include\\' or \\'outcome\\' entries and it does not provide a count of the number of entries in the Bundle.",
        "fieldIdentifierName": "total",
        "fieldName": "total",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Bundle.total",
        "requirements": undefined,
        "short": "If search, the total number of matches",
        "type": {
          "code": "UnsignedIntType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "unsignedInt",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "number",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": "Both Bundle.link and Bundle.entry.link are defined to support providing additional context when Bundles are used (e.g. [HATEOAS](http://en.wikipedia.org/wiki/HATEOAS)).  Bundle.entry.link corresponds to links found in the HTTP header if the resource in the entry was [read](https://hl7.org/fhir/http.html#read) directly. This specification defines some specific uses of Bundle.link for [searching](https://hl7.org/fhir/search.html#conformance) and [paging](https://hl7.org/fhir/http.html#paging), but no specific uses for Bundle.entry.link, and no defined function in a transaction - the meaning is implementation specific.",
        "definition": "A series of links that provide context to this bundle.",
        "fieldIdentifierName": "link",
        "fieldName": "link",
        "isArray": true,
        "isBackboneType": true,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "Bundle.link",
        "requirements": undefined,
        "short": "Links related to this Bundle",
        "type": {
          "code": "BundleLinkComponent",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "BackboneElement",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
        "fieldIdentifierName": "entry",
        "fieldName": "entry",
        "isArray": true,
        "isBackboneType": true,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "Bundle.entry",
        "requirements": undefined,
        "short": "Entry in the bundle - will have a resource or information",
        "type": {
          "code": "BundleEntryComponent",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "BackboneElement",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "The signature could be created by the "author" of the bundle or by the originating device.   Requirements around inclusion of a signature, verification of signatures and treatment of signed/non-signed bundles is implementation-environment specific.",
        "definition": "Digital Signature - base64 encoded. XML-DSig or a JWT.",
        "fieldIdentifierName": "signature",
        "fieldName": "signature",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "Bundle.signature",
        "requirements": "A Signature holds an electronic representation of a signature and its supporting context in a FHIR accessible form. The signature may either be a cryptographic type (XML DigSig or a JWS), which is able to provide non-repudiation proof, or it may be a graphical image that represents a signature or a signature process. This element allows capturing signatures on documents, messages, transactions or even search responses, to support content-authentication, non-repudiation or other business cases. This is primarily relevant where the bundle may travel through multiple hops or via other mechanisms where HTTPS non-repudiation is insufficient.",
        "short": "Digital Signature",
        "type": {
          "code": "Signature",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Signature",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "CodeType",
      "EnumCodeType",
      "FhirDataTypeParser",
      "FhirError",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "InstantType",
      "JSON",
      "REQUIRED_PROPERTIES_DO_NOT_EXIST",
      "REQUIRED_PROPERTIES_REQD_IN_JSON",
      "UnsignedIntType",
      "assertEnumCodeType",
      "assertFhirType",
      "assertFhirTypeList",
      "assertIsDefined",
      "constructorCodeValueAsEnumCodeType",
      "copyListValues",
      "fhirCode",
      "fhirCodeSchema",
      "fhirInstant",
      "fhirInstantSchema",
      "fhirUnsignedInt",
      "fhirUnsignedIntSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isDefinedList",
      "isElementEmpty",
      "isEmpty",
      "parseCodeType",
      "parseFhirPrimitiveData",
      "parseInstantType",
      "parseUnsignedIntType",
      "setFhirBackboneElementListJson",
      "setFhirComplexJson",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "BundleTypeEnum",
      "FhirResourceParser",
      "FhirResourceType",
      "Identifier",
      "PARSABLE_DATATYPE_MAP",
      "Resource",
      "Signature",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": true,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": true,
    "hasPrimitiveFields": true,
    "hasRequiredFields": true,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": false,
    "isComponentDomainResource": false,
    "isComponentElement": false,
    "isComponentResource": true,
    "numRequiredFields": 1,
    "parentFieldName": "Bundle",
    "parentKind": "resource",
    "parentName": "Bundle",
    "parentType": "Bundle",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/Bundle",
    "requiredConstructor": true,
    "rootElement": {
      "comment": undefined,
      "definition": "A container for a collection of resources.",
      "requirements": undefined,
      "short": "Contains a collection of resources",
    },
  },
  "purpose": undefined,
  "type": "Bundle",
  "url": "http://hl7.org/fhir/StructureDefinition/Bundle",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties Resources HbsProperties should return the correct properties for StructureDefinition-PractitionerRole 1`] = `
{
  "baseDefinitionType": "DomainResource",
  "childComponents": [
    {
      "baseDefinitionType": "BackboneElement",
      "componentName": "PractitionerRoleAvailableTimeComponent",
      "elementDefinitions": [
        {
          "cardinality": "0..*",
          "comment": undefined,
          "definition": "Indicates which days of the week are available between the start and end Times.",
          "fieldIdentifierName": "daysOfWeek",
          "fieldName": "daysOfWeek",
          "isArray": true,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": true,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": true,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": false,
          "max": "*",
          "min": 0,
          "path": "PractitionerRole.availableTime.daysOfWeek",
          "requirements": undefined,
          "short": "mon | tue | wed | thu | fri | sat | sun",
          "type": {
            "code": "EnumCodeType",
            "codeSystemEnumName": "DaysOfWeekEnum",
            "codeSystemName": "DaysOfWeek",
            "fhirDataType": "code",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Is this always available? (hence times are irrelevant) e.g. 24 hour service.",
          "fieldIdentifierName": "allDay",
          "fieldName": "allDay",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": false,
          "max": "1",
          "min": 0,
          "path": "PractitionerRole.availableTime.allDay",
          "requirements": undefined,
          "short": "Always available? e.g. 24 hour service",
          "type": {
            "code": "BooleanType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "boolean",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "boolean",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": "The timezone is expected to be for where this HealthcareService is provided at.",
          "definition": "The opening time of day. Note: If the AllDay flag is set, then this time is ignored.",
          "fieldIdentifierName": "availableStartTime",
          "fieldName": "availableStartTime",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": false,
          "max": "1",
          "min": 0,
          "path": "PractitionerRole.availableTime.availableStartTime",
          "requirements": undefined,
          "short": "Opening time of day (ignored if allDay = true)",
          "type": {
            "code": "TimeType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "time",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": "The timezone is expected to be for where this HealthcareService is provided at.",
          "definition": "The closing time of day. Note: If the AllDay flag is set, then this time is ignored.",
          "fieldIdentifierName": "availableEndTime",
          "fieldName": "availableEndTime",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": false,
          "max": "1",
          "min": 0,
          "path": "PractitionerRole.availableTime.availableEndTime",
          "requirements": undefined,
          "short": "Closing time of day (ignored if allDay = true)",
          "type": {
            "code": "TimeType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "time",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
      ],
      "fhirCoreImports": [
        "BackboneElement",
        "BooleanType",
        "CodeType",
        "EnumCodeType",
        "FhirDataTypeParser",
        "IBase",
        "INSTANCE_EMPTY_ERROR_MSG",
        "JSON",
        "PrimitiveTypeJson",
        "TimeType",
        "assertEnumCodeType",
        "assertEnumCodeTypeList",
        "assertFhirType",
        "assertFhirTypeList",
        "copyListValues",
        "fhirBoolean",
        "fhirBooleanSchema",
        "fhirCode",
        "fhirCodeSchema",
        "fhirTime",
        "fhirTimeSchema",
        "getPrimitiveTypeJson",
        "getPrimitiveTypeListJson",
        "isDefined",
        "isDefinedList",
        "isElementEmpty",
        "isEmpty",
        "parseBooleanType",
        "parseCodeType",
        "parseFhirPrimitiveData",
        "parseTimeType",
        "setFhirPrimitiveJson",
        "setFhirPrimitiveListJson",
      ],
      "generatedImports": [
        "DaysOfWeekEnum",
        "PARSABLE_DATATYPE_MAP",
      ],
      "hasChoiceFields": false,
      "hasCodeSystemEnums": true,
      "hasOnlyOnePrimitiveField": false,
      "hasParsableDataType": true,
      "hasParsableResource": false,
      "hasPrimitiveFields": true,
      "hasRequiredFields": false,
      "hasResourceFields": false,
      "isComponentBackboneElement": true,
      "isComponentBackboneType": false,
      "isComponentDataType": false,
      "isComponentDomainResource": false,
      "isComponentElement": false,
      "isComponentResource": false,
      "numRequiredFields": 0,
      "parentFieldName": "PractitionerRole.availableTime",
      "parentKind": "resource",
      "parentName": "PractitionerRole",
      "parentType": "PractitionerRole",
      "parentUrl": "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
      "requiredConstructor": true,
      "rootElement": {
        "comment": "More detailed availability information may be provided in associated Schedule/Slot resources.",
        "componentLevel": 2,
        "componentName": "PractitionerRoleAvailableTimeComponent",
        "definition": "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice.",
        "path": "PractitionerRole.availableTime",
        "requirements": undefined,
        "short": "Times the Service Site is available",
        "typeCode": "BackboneElement",
      },
    },
    {
      "baseDefinitionType": "BackboneElement",
      "componentName": "PractitionerRoleNotAvailableComponent",
      "elementDefinitions": [
        {
          "cardinality": "1..1",
          "comment": undefined,
          "definition": "The reason that can be presented to the user as to why this time is not available.",
          "fieldIdentifierName": "description",
          "fieldName": "description",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": true,
          "isRequiredItem": true,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": false,
          "max": "1",
          "min": 1,
          "path": "PractitionerRole.notAvailable.description",
          "requirements": undefined,
          "short": "Reason presented to the user explaining why time not available",
          "type": {
            "code": "StringType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "string",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
        {
          "cardinality": "0..1",
          "comment": undefined,
          "definition": "Service is not available (seasonally or for a public holiday) from this date.",
          "fieldIdentifierName": "during",
          "fieldName": "during",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": true,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": true,
          "isOptionalList": false,
          "isPrimitiveType": false,
          "isReferenceType": false,
          "isRequired": false,
          "isRequiredItem": false,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": false,
          "max": "1",
          "min": 0,
          "path": "PractitionerRole.notAvailable.during",
          "requirements": undefined,
          "short": "Service not available from this date",
          "type": {
            "code": "Period",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "Period",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": undefined,
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
      ],
      "fhirCoreImports": [
        "BackboneElement",
        "FhirDataTypeParser",
        "FhirError",
        "IBase",
        "INSTANCE_EMPTY_ERROR_MSG",
        "JSON",
        "PrimitiveType",
        "REQUIRED_PROPERTIES_DO_NOT_EXIST",
        "REQUIRED_PROPERTIES_REQD_IN_JSON",
        "StringType",
        "assertFhirType",
        "assertIsDefined",
        "fhirString",
        "fhirStringSchema",
        "getPrimitiveTypeJson",
        "isDefined",
        "isElementEmpty",
        "isEmpty",
        "parseFhirPrimitiveData",
        "parseStringType",
        "setFhirComplexJson",
        "setFhirPrimitiveJson",
      ],
      "generatedImports": [
        "PARSABLE_DATATYPE_MAP",
        "Period",
      ],
      "hasChoiceFields": false,
      "hasCodeSystemEnums": false,
      "hasOnlyOnePrimitiveField": true,
      "hasParsableDataType": true,
      "hasParsableResource": false,
      "hasPrimitiveFields": true,
      "hasRequiredFields": true,
      "hasResourceFields": false,
      "isComponentBackboneElement": true,
      "isComponentBackboneType": false,
      "isComponentDataType": false,
      "isComponentDomainResource": false,
      "isComponentElement": false,
      "isComponentResource": false,
      "numRequiredFields": 1,
      "parentFieldName": "PractitionerRole.notAvailable",
      "parentKind": "resource",
      "parentName": "PractitionerRole",
      "parentType": "PractitionerRole",
      "parentUrl": "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
      "requiredConstructor": true,
      "rootElement": {
        "comment": undefined,
        "componentLevel": 2,
        "componentName": "PractitionerRoleNotAvailableComponent",
        "definition": "The practitioner is not available or performing this role during this period of time due to the provided reason.",
        "path": "PractitionerRole.notAvailable",
        "requirements": undefined,
        "short": "Not available during this time due to provided reason",
        "typeCode": "BackboneElement",
      },
    },
  ],
  "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
  "fhirCoreImports": [
    "BackboneElement",
    "BooleanType",
    "CodeType",
    "EnumCodeType",
    "FhirDataTypeParser",
    "FhirError",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "PrimitiveType",
    "PrimitiveTypeJson",
    "REQUIRED_PROPERTIES_DO_NOT_EXIST",
    "REQUIRED_PROPERTIES_REQD_IN_JSON",
    "StringType",
    "TimeType",
    "assertEnumCodeType",
    "assertEnumCodeTypeList",
    "assertFhirType",
    "assertFhirTypeList",
    "assertIsDefined",
    "copyListValues",
    "fhirBoolean",
    "fhirBooleanSchema",
    "fhirCode",
    "fhirCodeSchema",
    "fhirString",
    "fhirStringSchema",
    "fhirTime",
    "fhirTimeSchema",
    "getPrimitiveTypeJson",
    "getPrimitiveTypeListJson",
    "isDefined",
    "isDefinedList",
    "isElementEmpty",
    "isEmpty",
    "parseBooleanType",
    "parseCodeType",
    "parseFhirPrimitiveData",
    "parseStringType",
    "parseTimeType",
    "setFhirBackboneElementListJson",
    "setFhirComplexJson",
    "setFhirComplexListJson",
    "setFhirPrimitiveJson",
    "setFhirPrimitiveListJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "CodeableConcept",
    "ContactPoint",
    "DaysOfWeekEnum",
    "DomainResource",
    "FhirResourceParser",
    "FhirResourceType",
    "Identifier",
    "PARSABLE_DATATYPE_MAP",
    "Period",
    "Reference",
    "ReferenceTargets",
  ],
  "hasChildComponents": true,
  "hasSymbolMetadata": false,
  "kind": "resource",
  "name": "PractitionerRole",
  "parentComponent": {
    "baseDefinitionType": "DomainResource",
    "componentName": "PractitionerRole",
    "elementDefinitions": [
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "Business Identifiers that are specific to a role/location.",
        "fieldIdentifierName": "identifier",
        "fieldName": "identifier",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "PractitionerRole.identifier",
        "requirements": "Often, specific identities are assigned for the agent.",
        "short": "Business Identifiers that are specific to a role/location",
        "type": {
          "code": "Identifier",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Identifier",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "If this value is false, you may refer to the period to see when the role was in active use. If there is no period specified, no inference can be made about when it was active.",
        "definition": "Whether this practitioner role record is in active use.",
        "fieldIdentifierName": "active",
        "fieldName": "active",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "PractitionerRole.active",
        "requirements": "Need to be able to mark a practitioner role record as not to be used because it was created in error, or otherwise no longer in active use.",
        "short": "Whether this practitioner role record is in active use",
        "type": {
          "code": "BooleanType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "boolean",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "boolean",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "The period during which the person is authorized to act as a practitioner in these role(s) for the organization.",
        "fieldIdentifierName": "period",
        "fieldName": "period",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "PractitionerRole.period",
        "requirements": "Even after the agencies is revoked, the fact that it existed must still be recorded.",
        "short": "The period during which the practitioner is authorized to perform in these role(s)",
        "type": {
          "code": "Period",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Period",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "Practitioner that is able to provide the defined services for the organization.",
        "fieldIdentifierName": "practitioner",
        "fieldName": "practitioner",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": true,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "PractitionerRole.practitioner",
        "requirements": undefined,
        "short": "Practitioner that is able to provide the defined services for the organization",
        "type": {
          "code": "Reference",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Reference",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
          ],
          "targetResource": [
            "Practitioner",
          ],
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "The organization where the Practitioner performs the roles associated.",
        "fieldIdentifierName": "organization",
        "fieldName": "organization",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": true,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "PractitionerRole.organization",
        "requirements": undefined,
        "short": "Organization where the roles are available",
        "type": {
          "code": "Reference",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Reference",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
          "targetResource": [
            "Organization",
          ],
        },
      },
      {
        "cardinality": "0..*",
        "comment": "A person may have more than one role.",
        "definition": "Roles which this practitioner is authorized to perform for the organization.",
        "fieldIdentifierName": "code",
        "fieldName": "code",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "PractitionerRole.code",
        "requirements": "Need to know what authority the practitioner has - what can they do?",
        "short": "Roles which this practitioner may perform",
        "type": {
          "code": "CodeableConcept",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "CodeableConcept",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "Specific specialty of the practitioner.",
        "fieldIdentifierName": "specialty",
        "fieldName": "specialty",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "PractitionerRole.specialty",
        "requirements": undefined,
        "short": "Specific specialty of the practitioner",
        "type": {
          "code": "CodeableConcept",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "CodeableConcept",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "The location(s) at which this practitioner provides care.",
        "fieldIdentifierName": "location",
        "fieldName": "location",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": true,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "PractitionerRole.location",
        "requirements": undefined,
        "short": "The location(s) at which this practitioner provides care",
        "type": {
          "code": "Reference",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Reference",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/Location",
          ],
          "targetResource": [
            "Location",
          ],
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "The list of healthcare services that this worker provides for this role\\'s Organization/Location(s).",
        "fieldIdentifierName": "healthcareService",
        "fieldName": "healthcareService",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": true,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "*",
        "min": 0,
        "path": "PractitionerRole.healthcareService",
        "requirements": undefined,
        "short": "The list of healthcare services that this worker provides for this role\\'s Organization/Location(s)",
        "type": {
          "code": "Reference",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Reference",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/HealthcareService",
          ],
          "targetResource": [
            "HealthcareService",
          ],
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "Contact details that are specific to the role/location/service.",
        "fieldIdentifierName": "telecom",
        "fieldName": "telecom",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "PractitionerRole.telecom",
        "requirements": "Often practitioners have a dedicated line for each location (or service) that they work at, and need to be able to define separate contact details for each of these.",
        "short": "Contact details that are specific to the role/location/service",
        "type": {
          "code": "ContactPoint",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "ContactPoint",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": "More detailed availability information may be provided in associated Schedule/Slot resources.",
        "definition": "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice.",
        "fieldIdentifierName": "availableTime",
        "fieldName": "availableTime",
        "isArray": true,
        "isBackboneType": true,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "*",
        "min": 0,
        "path": "PractitionerRole.availableTime",
        "requirements": undefined,
        "short": "Times the Service Site is available",
        "type": {
          "code": "PractitionerRoleAvailableTimeComponent",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "BackboneElement",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "The practitioner is not available or performing this role during this period of time due to the provided reason.",
        "fieldIdentifierName": "notAvailable",
        "fieldName": "notAvailable",
        "isArray": true,
        "isBackboneType": true,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "*",
        "min": 0,
        "path": "PractitionerRole.notAvailable",
        "requirements": undefined,
        "short": "Not available during this time due to provided reason",
        "type": {
          "code": "PractitionerRoleNotAvailableComponent",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "BackboneElement",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.",
        "fieldIdentifierName": "availabilityExceptions",
        "fieldName": "availabilityExceptions",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "PractitionerRole.availabilityExceptions",
        "requirements": undefined,
        "short": "Description of availability exceptions",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "Technical endpoints providing access to services operated for the practitioner with this role.",
        "fieldIdentifierName": "endpoint",
        "fieldName": "endpoint",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": true,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "*",
        "min": 0,
        "path": "PractitionerRole.endpoint",
        "requirements": "Organizations have multiple systems that provide various services and ,ay also be different for practitioners too. So the endpoint satisfies the need to be able to define the technical connection details for how to connect to them, and for what purpose.",
        "short": "Technical endpoints providing access to services operated for the practitioner with this role",
        "type": {
          "code": "Reference",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "Reference",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/Endpoint",
          ],
          "targetResource": [
            "Endpoint",
          ],
        },
      },
    ],
    "fhirCoreImports": [
      "BooleanType",
      "FhirDataTypeParser",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "StringType",
      "assertFhirType",
      "assertFhirTypeList",
      "copyListValues",
      "fhirBoolean",
      "fhirBooleanSchema",
      "fhirString",
      "fhirStringSchema",
      "getPrimitiveTypeJson",
      "isDefined",
      "isDefinedList",
      "isElementEmpty",
      "isEmpty",
      "parseBooleanType",
      "parseFhirPrimitiveData",
      "parseStringType",
      "setFhirBackboneElementListJson",
      "setFhirComplexJson",
      "setFhirComplexListJson",
      "setFhirPrimitiveJson",
    ],
    "generatedImports": [
      "CodeableConcept",
      "ContactPoint",
      "DomainResource",
      "FhirResourceParser",
      "FhirResourceType",
      "Identifier",
      "PARSABLE_DATATYPE_MAP",
      "Period",
      "Reference",
      "ReferenceTargets",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": false,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": true,
    "hasPrimitiveFields": true,
    "hasRequiredFields": false,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": false,
    "isComponentDomainResource": true,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 0,
    "parentFieldName": "PractitionerRole",
    "parentKind": "resource",
    "parentName": "PractitionerRole",
    "parentType": "PractitionerRole",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
    "requiredConstructor": false,
    "rootElement": {
      "comment": undefined,
      "definition": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
      "requirements": undefined,
      "short": "Roles/organizations the practitioner is associated with",
    },
  },
  "purpose": "Need to track services that a healthcare provider is able to provide at an organization\\'s location, and the services that they can perform there.",
  "type": "PractitionerRole",
  "url": "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
}
`;

exports[`src/generator-lib/templates/utils-hbs getSdHbsProperties Resources HbsProperties should return the correct properties for StructureDefinition-SearchParameter 1`] = `
{
  "baseDefinitionType": "DomainResource",
  "childComponents": [
    {
      "baseDefinitionType": "BackboneElement",
      "componentName": "SearchParameterComponentComponent",
      "elementDefinitions": [
        {
          "cardinality": "1..1",
          "comment": undefined,
          "definition": "The definition of the search parameter that describes this part.",
          "fieldIdentifierName": "definition",
          "fieldName": "definition",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": true,
          "isRequiredItem": true,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": false,
          "max": "1",
          "min": 1,
          "path": "SearchParameter.component.definition",
          "requirements": undefined,
          "short": "Defines how the part works",
          "type": {
            "code": "CanonicalType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "canonical",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": [
              "http://hl7.org/fhir/StructureDefinition/SearchParameter",
            ],
            "targetResource": [
              "SearchParameter",
            ],
          },
        },
        {
          "cardinality": "1..1",
          "comment": "This expression overrides the expression in the definition and extracts the index values from the outcome of the composite expression.",
          "definition": "A sub-expression that defines how to extract values for this component from the output of the main SearchParameter.expression.",
          "fieldIdentifierName": "expression",
          "fieldName": "expression",
          "isArray": false,
          "isBackboneType": false,
          "isChoiceType": false,
          "isComplexType": false,
          "isEnumCodeType": false,
          "isModifier": false,
          "isModifierReason": undefined,
          "isOptionalItem": false,
          "isOptionalList": false,
          "isPrimitiveType": true,
          "isReferenceType": false,
          "isRequired": true,
          "isRequiredItem": true,
          "isRequiredList": false,
          "isResourceType": false,
          "isSummary": false,
          "max": "1",
          "min": 1,
          "path": "SearchParameter.component.expression",
          "requirements": undefined,
          "short": "Subexpression relative to main expression",
          "type": {
            "code": "StringType",
            "codeSystemEnumName": undefined,
            "codeSystemName": undefined,
            "fhirDataType": "string",
            "isDupeCodeSystemName": false,
            "primitiveJsonType": "string",
            "targetProfile": undefined,
            "targetResource": undefined,
          },
        },
      ],
      "fhirCoreImports": [
        "BackboneElement",
        "CanonicalType",
        "FhirDataTypeParser",
        "FhirError",
        "IBase",
        "INSTANCE_EMPTY_ERROR_MSG",
        "JSON",
        "PrimitiveType",
        "REQUIRED_PROPERTIES_DO_NOT_EXIST",
        "REQUIRED_PROPERTIES_REQD_IN_JSON",
        "StringType",
        "assertFhirType",
        "assertIsDefined",
        "fhirCanonical",
        "fhirCanonicalSchema",
        "fhirString",
        "fhirStringSchema",
        "getPrimitiveTypeJson",
        "isDefined",
        "isElementEmpty",
        "isEmpty",
        "parseCanonicalType",
        "parseFhirPrimitiveData",
        "parseStringType",
        "setFhirPrimitiveJson",
      ],
      "generatedImports": [
        "PARSABLE_DATATYPE_MAP",
      ],
      "hasChoiceFields": false,
      "hasCodeSystemEnums": false,
      "hasOnlyOnePrimitiveField": false,
      "hasParsableDataType": true,
      "hasParsableResource": false,
      "hasPrimitiveFields": true,
      "hasRequiredFields": true,
      "hasResourceFields": false,
      "isComponentBackboneElement": true,
      "isComponentBackboneType": false,
      "isComponentDataType": false,
      "isComponentDomainResource": false,
      "isComponentElement": false,
      "isComponentResource": false,
      "numRequiredFields": 2,
      "parentFieldName": "SearchParameter.component",
      "parentKind": "resource",
      "parentName": "SearchParameter",
      "parentType": "SearchParameter",
      "parentUrl": "http://hl7.org/fhir/StructureDefinition/SearchParameter",
      "requiredConstructor": true,
      "rootElement": {
        "comment": undefined,
        "componentLevel": 2,
        "componentName": "SearchParameterComponentComponent",
        "definition": "Used to define the parts of a composite search parameter.",
        "path": "SearchParameter.component",
        "requirements": undefined,
        "short": "For Composite resources to define the parts",
        "typeCode": "BackboneElement",
      },
    },
  ],
  "description": "A search parameter that defines a named search item that can be used to search/filter on a resource.",
  "fhirCoreImports": [
    "BackboneElement",
    "BooleanType",
    "CanonicalType",
    "CodeType",
    "DateTimeType",
    "EnumCodeType",
    "FhirDataTypeParser",
    "FhirError",
    "IBase",
    "INSTANCE_EMPTY_ERROR_MSG",
    "JSON",
    "MarkdownType",
    "PrimitiveType",
    "PrimitiveTypeJson",
    "REQUIRED_PROPERTIES_DO_NOT_EXIST",
    "REQUIRED_PROPERTIES_REQD_IN_JSON",
    "StringType",
    "UriType",
    "assertEnumCodeType",
    "assertEnumCodeTypeList",
    "assertFhirType",
    "assertFhirTypeList",
    "assertIsDefined",
    "assertIsDefinedList",
    "constructorCodeValueAsEnumCodeType",
    "constructorCodeValueAsEnumCodeTypeList",
    "copyListValues",
    "fhirBoolean",
    "fhirBooleanSchema",
    "fhirCanonical",
    "fhirCanonicalSchema",
    "fhirCode",
    "fhirCodeSchema",
    "fhirDateTime",
    "fhirDateTimeSchema",
    "fhirMarkdown",
    "fhirMarkdownSchema",
    "fhirString",
    "fhirStringSchema",
    "fhirUri",
    "fhirUriSchema",
    "getPrimitiveTypeJson",
    "getPrimitiveTypeListJson",
    "isDefined",
    "isDefinedList",
    "isElementEmpty",
    "isEmpty",
    "parseBooleanType",
    "parseCanonicalType",
    "parseCodeType",
    "parseDateTimeType",
    "parseFhirPrimitiveData",
    "parseMarkdownType",
    "parseStringType",
    "parseUriType",
    "setFhirBackboneElementListJson",
    "setFhirComplexListJson",
    "setFhirPrimitiveJson",
    "setFhirPrimitiveListJson",
  ],
  "fhirVersion": "4.0.1",
  "generatedImports": [
    "CodeableConcept",
    "ContactDetail",
    "DomainResource",
    "FhirResourceParser",
    "FhirResourceType",
    "PARSABLE_DATATYPE_MAP",
    "PublicationStatusEnum",
    "ResourceTypesEnum",
    "SearchComparatorEnum",
    "SearchModifierCodeEnum",
    "SearchParamTypeEnum",
    "UsageContext",
  ],
  "hasChildComponents": true,
  "hasSymbolMetadata": false,
  "kind": "resource",
  "name": "SearchParameter",
  "parentComponent": {
    "baseDefinitionType": "DomainResource",
    "componentName": "SearchParameter",
    "elementDefinitions": [
      {
        "cardinality": "1..1",
        "comment": "Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version. The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](https://hl7.org/fhir/resource.html#versions).  In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](https://hl7.org/fhir/resource.html#meta) element to indicate where the current master source of the resource can be found.",
        "definition": "An absolute URI that is used to identify this search parameter when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this search parameter is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the search parameter is stored on different servers.",
        "fieldIdentifierName": "url",
        "fieldName": "url",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 1,
        "path": "SearchParameter.url",
        "requirements": "Allows the search parameter to be referenced by a single globally unique identifier. To allow referencing and reusing search parameter definitions under other names on operational systems (in case of name clash).",
        "short": "Canonical identifier for this search parameter, represented as a URI (globally unique)",
        "type": {
          "code": "UriType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "uri",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "There may be different search parameter instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the search parameter with the format [url]|[version].",
        "definition": "The identifier that is used to identify this version of the search parameter when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the search parameter author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "fieldIdentifierName": "version",
        "fieldName": "version",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.version",
        "requirements": undefined,
        "short": "Business version of the search parameter",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "1..1",
        "comment": "The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.",
        "definition": "A natural language name identifying the search parameter. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "fieldIdentifierName": "name",
        "fieldName": "name",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 1,
        "path": "SearchParameter.name",
        "requirements": "Support human navigation and code generation.",
        "short": "Name for this search parameter (computer friendly)",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "The intent of this is that a server can designate that it provides support for a search parameter defined in the specification itself (e.g.  [\`value-quantity\`](http://hl7.org/fhir/SearchParameter/Observation-value-quantity), but detail how it is supported by the server.",
        "definition": "Where this search parameter is originally defined. If a derivedFrom is provided, then the details in the search parameter must be consistent with the definition from which it is defined. i.e. the parameter should have the same meaning, and (usually) the functionality should be a proper subset of the underlying search parameter.",
        "fieldIdentifierName": "derivedFrom",
        "fieldName": "derivedFrom",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.derivedFrom",
        "requirements": undefined,
        "short": "Original definition for the search parameter",
        "type": {
          "code": "CanonicalType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "canonical",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": [
            "http://hl7.org/fhir/StructureDefinition/SearchParameter",
          ],
          "targetResource": [
            "SearchParameter",
          ],
        },
      },
      {
        "cardinality": "1..1",
        "comment": "Allows filtering of search parameters that are appropriate for use versus not.",
        "definition": "The status of this search parameter. Enables tracking the life-cycle of the content.",
        "fieldIdentifierName": "status",
        "fieldName": "status",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": true,
        "isModifierReason": "This is labeled as "Is Modifier" because applications should not use a retired {{title}} without due consideration",
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 1,
        "path": "SearchParameter.status",
        "requirements": undefined,
        "short": "draft | active | retired | unknown",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "PublicationStatusEnum",
          "codeSystemName": "PublicationStatus",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Allows filtering of search parameters that are appropriate for use versus not.",
        "definition": "A Boolean value to indicate that this search parameter is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "fieldIdentifierName": "experimental",
        "fieldName": "experimental",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.experimental",
        "requirements": "Enables experimental content to be developed following the same lifecycle that would be used for a production-level search parameter.",
        "short": "For testing purposes, not real usage",
        "type": {
          "code": "BooleanType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "boolean",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "boolean",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the search parameter. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.",
        "definition": "The date  (and optionally time) when the search parameter was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the search parameter changes.",
        "fieldIdentifierName": "date",
        "fieldName": "date",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.date",
        "requirements": undefined,
        "short": "Date last changed",
        "type": {
          "code": "DateTimeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "dateTime",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Usually an organization but may be an individual. The publisher (or steward) of the search parameter is the organization or individual primarily responsible for the maintenance and upkeep of the search parameter. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the search parameter. This item SHOULD be populated unless the information is available from context.",
        "definition": "The name of the organization or individual that published the search parameter.",
        "fieldIdentifierName": "publisher",
        "fieldName": "publisher",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.publisher",
        "requirements": "Helps establish the "authority/credibility" of the search parameter.  May also allow for contact.",
        "short": "Name of the publisher (organization or individual)",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": "May be a web site, an email address, a telephone number, etc.",
        "definition": "Contact details to assist a user in finding and communicating with the publisher.",
        "fieldIdentifierName": "contact",
        "fieldName": "contact",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "SearchParameter.contact",
        "requirements": undefined,
        "short": "Contact details for the publisher",
        "type": {
          "code": "ContactDetail",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "ContactDetail",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "1..1",
        "comment": "This description can be used to capture details such as why the search parameter was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the search parameter as conveyed in the \\'text\\' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the search parameter is presumed to be the predominant language in the place the search parameter was created).",
        "definition": "And how it used.",
        "fieldIdentifierName": "description",
        "fieldName": "description",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 1,
        "path": "SearchParameter.description",
        "requirements": undefined,
        "short": "Natural language description of the search parameter",
        "type": {
          "code": "MarkdownType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "markdown",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": "When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.",
        "definition": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate search parameter instances.",
        "fieldIdentifierName": "useContext",
        "fieldName": "useContext",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "SearchParameter.useContext",
        "requirements": "Assist in searching for appropriate content.",
        "short": "The context that the content is intended to support",
        "type": {
          "code": "UsageContext",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "UsageContext",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": "It may be possible for the search parameter to be used in jurisdictions other than those for which it was originally designed or intended.",
        "definition": "A legal or geographic region in which the search parameter is intended to be used.",
        "fieldIdentifierName": "jurisdiction",
        "fieldName": "jurisdiction",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": true,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 0,
        "path": "SearchParameter.jurisdiction",
        "requirements": undefined,
        "short": "Intended jurisdiction for search parameter (if applicable)",
        "type": {
          "code": "CodeableConcept",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "CodeableConcept",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "This element does not describe the usage of the search parameter. Instead, it provides traceability of \\'\\'why\\'\\' the resource is either needed or \\'\\'why\\'\\' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this search parameter.",
        "definition": "Explanation of why this search parameter is needed and why it has been designed as it has.",
        "fieldIdentifierName": "purpose",
        "fieldName": "purpose",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.purpose",
        "requirements": undefined,
        "short": "Why this search parameter is defined",
        "type": {
          "code": "MarkdownType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "markdown",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "1..1",
        "comment": "For maximum compatibility, use only lowercase ASCII characters.",
        "definition": "The code used in the URL or the parameter name in a parameters resource for this search parameter.",
        "fieldIdentifierName": "code",
        "fieldName": "code",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 1,
        "path": "SearchParameter.code",
        "requirements": undefined,
        "short": "Code used in URL",
        "type": {
          "code": "CodeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "1..*",
        "comment": "A search parameter must always apply to at least one resource type. When search parameters apply to more than one resource type, they can be used against any of the listed resource types, or in a cross-type search (see [Cross Resource Search](https://hl7.org/fhir/http.html#xres-search)).",
        "definition": "The base resource type(s) that this search parameter can be used against.",
        "fieldIdentifierName": "base",
        "fieldName": "base",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": false,
        "isRequiredList": true,
        "isResourceType": false,
        "isSummary": true,
        "max": "*",
        "min": 1,
        "path": "SearchParameter.base",
        "requirements": undefined,
        "short": "The resource type(s) this search parameter applies to",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "ResourceTypesEnum",
          "codeSystemName": "ResourceTypes",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "1..1",
        "comment": undefined,
        "definition": "The type of value that a search parameter may contain, and how the content is interpreted.",
        "fieldIdentifierName": "type_",
        "fieldName": "type",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": false,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": true,
        "isRequiredItem": true,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": true,
        "max": "1",
        "min": 1,
        "path": "SearchParameter.type",
        "requirements": undefined,
        "short": "number | date | string | token | reference | composite | quantity | uri | special",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "SearchParamTypeEnum",
          "codeSystemName": "SearchParamType",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Note that the elements returned by the expression are sometimes complex elements where logic is required to determine quite how to handle them; e.g. CodeableConcepts may contain text and/or multiple codings, where the codings themselves contain a code and a system. For composite search parameters, the outcome of the expression must a collection of base elements from which the composites are derived.",
        "definition": "A FHIRPath expression that returns a set of elements for the search parameter.",
        "fieldIdentifierName": "expression",
        "fieldName": "expression",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.expression",
        "requirements": undefined,
        "short": "FHIRPath expression that extracts the values",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": "Note that the elements returned by the XPath are sometimes complex elements where logic is required to determine quite how to handle them; e.g. CodeableConcepts may contain text and/or multiple codings, where the codings themselves contain a code and a system.",
        "definition": "An XPath expression that returns a set of elements for the search parameter.",
        "fieldIdentifierName": "xpath",
        "fieldName": "xpath",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.xpath",
        "requirements": undefined,
        "short": "XPath that extracts the values",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "How the search parameter relates to the set of elements returned by evaluating the xpath query.",
        "fieldIdentifierName": "xpathUsage",
        "fieldName": "xpathUsage",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.xpathUsage",
        "requirements": undefined,
        "short": "normal | phonetic | nearby | distance | other",
        "type": {
          "code": "CodeType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "Types of resource (if a resource is referenced).",
        "fieldIdentifierName": "target",
        "fieldName": "target",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "*",
        "min": 0,
        "path": "SearchParameter.target",
        "requirements": undefined,
        "short": "Types of resource (if a resource reference)",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "ResourceTypesEnum",
          "codeSystemName": "ResourceTypes",
          "fhirDataType": "code",
          "isDupeCodeSystemName": true,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "Whether multiple values are allowed for each time the parameter exists. Values are separated by commas, and the parameter matches if any of the values match.",
        "fieldIdentifierName": "multipleOr",
        "fieldName": "multipleOr",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.multipleOr",
        "requirements": undefined,
        "short": "Allow multiple values per parameter (or)",
        "type": {
          "code": "BooleanType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "boolean",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "boolean",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..1",
        "comment": undefined,
        "definition": "Whether multiple parameters are allowed - e.g. more than one parameter with the same name. The search matches if all the parameters match.",
        "fieldIdentifierName": "multipleAnd",
        "fieldName": "multipleAnd",
        "isArray": false,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": true,
        "isOptionalList": false,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "1",
        "min": 0,
        "path": "SearchParameter.multipleAnd",
        "requirements": undefined,
        "short": "Allow multiple parameters (and)",
        "type": {
          "code": "BooleanType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "boolean",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "boolean",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": "If no comparators are listed, clients should not expect servers to support any comparators.",
        "definition": "Comparators supported for the search parameter.",
        "fieldIdentifierName": "comparator",
        "fieldName": "comparator",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "*",
        "min": 0,
        "path": "SearchParameter.comparator",
        "requirements": undefined,
        "short": "eq | ne | gt | lt | ge | le | sa | eb | ap",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "SearchComparatorEnum",
          "codeSystemName": "SearchComparator",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "A modifier supported for the search parameter.",
        "fieldIdentifierName": "modifier",
        "fieldName": "modifier",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": true,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "*",
        "min": 0,
        "path": "SearchParameter.modifier",
        "requirements": undefined,
        "short": "missing | exact | contains | not | text | in | not-in | below | above | type | identifier | ofType",
        "type": {
          "code": "EnumCodeType",
          "codeSystemEnumName": "SearchModifierCodeEnum",
          "codeSystemName": "SearchModifierCode",
          "fhirDataType": "code",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": "Systems are not required to list all the chain names they support, but if they don\\'t list them, clients might not know to use them.",
        "definition": "Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from SearchParameter.code for a parameter on the target resource type.",
        "fieldIdentifierName": "chain",
        "fieldName": "chain",
        "isArray": true,
        "isBackboneType": false,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": true,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "*",
        "min": 0,
        "path": "SearchParameter.chain",
        "requirements": undefined,
        "short": "Chained names supported",
        "type": {
          "code": "StringType",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "string",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": "string",
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
      {
        "cardinality": "0..*",
        "comment": undefined,
        "definition": "Used to define the parts of a composite search parameter.",
        "fieldIdentifierName": "component",
        "fieldName": "component",
        "isArray": true,
        "isBackboneType": true,
        "isChoiceType": false,
        "isComplexType": false,
        "isEnumCodeType": false,
        "isModifier": false,
        "isModifierReason": undefined,
        "isOptionalItem": false,
        "isOptionalList": true,
        "isPrimitiveType": false,
        "isReferenceType": false,
        "isRequired": false,
        "isRequiredItem": false,
        "isRequiredList": false,
        "isResourceType": false,
        "isSummary": false,
        "max": "*",
        "min": 0,
        "path": "SearchParameter.component",
        "requirements": undefined,
        "short": "For Composite resources to define the parts",
        "type": {
          "code": "SearchParameterComponentComponent",
          "codeSystemEnumName": undefined,
          "codeSystemName": undefined,
          "fhirDataType": "BackboneElement",
          "isDupeCodeSystemName": false,
          "primitiveJsonType": undefined,
          "targetProfile": undefined,
          "targetResource": undefined,
        },
      },
    ],
    "fhirCoreImports": [
      "BooleanType",
      "CanonicalType",
      "CodeType",
      "DateTimeType",
      "EnumCodeType",
      "FhirDataTypeParser",
      "FhirError",
      "IBase",
      "INSTANCE_EMPTY_ERROR_MSG",
      "JSON",
      "MarkdownType",
      "PrimitiveType",
      "PrimitiveTypeJson",
      "REQUIRED_PROPERTIES_DO_NOT_EXIST",
      "REQUIRED_PROPERTIES_REQD_IN_JSON",
      "StringType",
      "UriType",
      "assertEnumCodeType",
      "assertEnumCodeTypeList",
      "assertFhirType",
      "assertFhirTypeList",
      "assertIsDefined",
      "assertIsDefinedList",
      "constructorCodeValueAsEnumCodeType",
      "constructorCodeValueAsEnumCodeTypeList",
      "copyListValues",
      "fhirBoolean",
      "fhirBooleanSchema",
      "fhirCanonical",
      "fhirCanonicalSchema",
      "fhirCode",
      "fhirCodeSchema",
      "fhirDateTime",
      "fhirDateTimeSchema",
      "fhirMarkdown",
      "fhirMarkdownSchema",
      "fhirString",
      "fhirStringSchema",
      "fhirUri",
      "fhirUriSchema",
      "getPrimitiveTypeJson",
      "getPrimitiveTypeListJson",
      "isDefined",
      "isDefinedList",
      "isElementEmpty",
      "isEmpty",
      "parseBooleanType",
      "parseCanonicalType",
      "parseCodeType",
      "parseDateTimeType",
      "parseFhirPrimitiveData",
      "parseMarkdownType",
      "parseStringType",
      "parseUriType",
      "setFhirBackboneElementListJson",
      "setFhirComplexListJson",
      "setFhirPrimitiveJson",
      "setFhirPrimitiveListJson",
    ],
    "generatedImports": [
      "CodeableConcept",
      "ContactDetail",
      "DomainResource",
      "FhirResourceParser",
      "FhirResourceType",
      "PARSABLE_DATATYPE_MAP",
      "PublicationStatusEnum",
      "ResourceTypesEnum",
      "SearchComparatorEnum",
      "SearchModifierCodeEnum",
      "SearchParamTypeEnum",
      "UsageContext",
    ],
    "hasChoiceFields": false,
    "hasCodeSystemEnums": true,
    "hasOnlyOnePrimitiveField": false,
    "hasParsableDataType": true,
    "hasParsableResource": true,
    "hasPrimitiveFields": true,
    "hasRequiredFields": true,
    "hasResourceFields": false,
    "isComponentBackboneElement": false,
    "isComponentBackboneType": false,
    "isComponentDataType": false,
    "isComponentDomainResource": true,
    "isComponentElement": false,
    "isComponentResource": false,
    "numRequiredFields": 7,
    "parentFieldName": "SearchParameter",
    "parentKind": "resource",
    "parentName": "SearchParameter",
    "parentType": "SearchParameter",
    "parentUrl": "http://hl7.org/fhir/StructureDefinition/SearchParameter",
    "requiredConstructor": true,
    "rootElement": {
      "comment": "In FHIR, search is not performed directly on a resource (by XML or JSON path), but on a named parameter that maps into the resource content.",
      "definition": "A search parameter that defines a named search item that can be used to search/filter on a resource.",
      "requirements": undefined,
      "short": "Search parameter for a resource",
    },
  },
  "purpose": undefined,
  "type": "SearchParameter",
  "url": "http://hl7.org/fhir/StructureDefinition/SearchParameter",
}
`;
