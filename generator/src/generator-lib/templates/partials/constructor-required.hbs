{{!-- Constructor Required Partial Template --}}
{{!-- context is a HbsElementComponent --}}
  constructor({{#if hasRequiredFields}}{{{requiredConstructorParams elementDefinitions}}}{{/if}}) {
    super();
{{#if hasCodeSystemEnums}}

{{#each elementDefinitions}}
{{#if this.type.codeSystemEnumName}}
    this.{{camelCase this.type.codeSystemEnumName}} = new {{this.type.codeSystemEnumName}}();
{{/if}}
{{/each}}
{{/if}}
{{#if hasRequiredFields}}
{{#each elementDefinitions}}
{{#if this.isRequired}}
{{#if this.type.codeSystemEnumName}}

    this.{{this.fieldName}} = constructorCodeValueAsEnumCodeType<{{this.type.codeSystemEnumName}}>(
      {{this.fieldName}},
      {{this.type.codeSystemEnumName}},
      this.{{camelCase this.type.codeSystemEnumName}},
      '{{parentName}}.{{this.fieldName}}',
   );
{{else}}

    this.{{this.fieldName}} = null;
{{#if this.isPrimitiveMethods}}
{{#if this.isArray}}
    if (isDefinedList<{{this.type.code}} | fhir{{upperFirst this.type.fhirDataType}}>({{this.fieldName}})) {
      if ({{this.fieldName}}[0] instanceof PrimitiveType) {
        this.set{{upperFirst this.fieldName}}Element({{this.fieldName}} as {{this.type.code}}[]);
      } else {
        this.set{{upperFirst this.fieldName}}({{this.fieldName}} as fhir{{upperFirst this.type.fhirDataType}}[]);
      }
    }
{{else}}
    if (isDefined<{{this.type.code}} | fhir{{upperFirst this.type.fhirDataType}}>({{this.fieldName}})) {
      if ({{this.fieldName}} instanceof PrimitiveType) {
        this.set{{upperFirst this.fieldName}}Element({{this.fieldName}});
      } else {
        this.set{{upperFirst this.fieldName}}({{this.fieldName}});
      }
    }
{{/if}}
{{else}}
{{#if this.isArray}}
    if (isDefinedList<{{this.type.code}}>({{this.fieldName}})) {
      this.set{{upperFirst this.fieldName}}({{this.fieldName}});
    }
{{else}}
    if (isDefined<{{this.type.code}}>({{this.fieldName}})) {
      this.set{{upperFirst this.fieldName}}({{this.fieldName}});
    }
{{/if}}
{{/if}}
{{/if}}
{{/if}}
{{/each}}
{{/if}}
  }
