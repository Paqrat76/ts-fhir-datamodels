/*
 * Copyright (c) 2025. Joe Paquette
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

import { strict as assert } from 'node:assert';
import {
{{#each sdHbs.fhirCoreImports}}
  {{this}},
{{/each}}
} from '@paq-ts-fhir/fhir-core';
{{#if sdHbs.generatedImports }}
import {
{{#each sdHbs.generatedImports}}
  {{this}},
{{/each}}
} from '../index';
{{/if}}

/**
 * {{sdHbs.name}} Class
 *
 * @remarks
 * {{{sdHbs.description}}}
{{#if sdHbs.purpose}}
 *
 * {{{sdHbs.purpose}}}
{{/if}}
 *
 * **FHIR Specification**
{{#if sdHbs.rootElement.short}}
 * - **Short:** {{{sdHbs.rootElement.short}}}
{{/if}}
{{#if sdHbs.rootElement.definition}}
 * - **Definition:** {{{sdHbs.rootElement.definition}}}
{{/if}}
{{#if sdHbs.rootElement.comment}}
 * - **Comment:** {{{sdHbs.rootElement.comment}}}
{{/if}}
{{#if sdHbs.rootElement.requirements}}
 * - **Requirements:** {{{sdHbs.rootElement.requirements}}}
{{/if}}
 * - **FHIR Version:** {{sdHbs.fhirVersion}}
 *
 * @category Datatypes: Complex
 * @see [FHIR {{sdHbs.type}}]({{{sdHbs.url}}})
 */
export class {{sdHbs.name}} extends DataType implements IBase {
{{#if sdHbs.requiredConstructor}}
{{!-- Constructor Required Partial --}}
{{> constructorRequiredPartial}}
{{else}}
  // eslint-disable-next-line @typescript-eslint/no-useless-constructor
  constructor() {
    super();
  }
{{/if}}

{{!-- Public Static Parse Method Partial --}}
{{> publicStaticParseMethodPartial}}

{{!-- Private Field Declarations Partial --}}
{{#each sdHbs.elementDefinitions}}
{{> privateFieldDeclarationPartial edHbs=this }}

{{/each}}

{{!-- Public Field Methods Partial --}}
{{#each sdHbs.elementDefinitions}}
{{> publicFieldMethodsPartial edHbs=this }}
{{/each}}

{{!-- Public Base Methods Partial --}}
{{> publicBaseMethodsPartial}}

  /**
   * @returns `true` if the instance is a FHIR complex datatype; `false` otherwise
   */
  public override isComplexDataType(): boolean {
    return true;
  }

{{!-- Public toJSON Method Partial --}}
{{> publicToJSONMethodPartial}}
}
