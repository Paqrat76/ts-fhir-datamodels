{{!-- Constructor Required Partial Template --}}
{{!-- context is a HbsElementComponent --}}
  constructor({{#if hasRequiredFields}}{{{requiredConstructorParams elementDefinitions}}}{{/if}}) {
    super();
{{#if hasCodeSystemEnums}}

{{#each elementDefinitions}}
{{#if this.isEnumCodeType}}
{{#unless this.type.isDupeCodeSystemName}}
    this.{{camelCase this.type.codeSystemEnumName}} = new {{this.type.codeSystemEnumName}}();
{{/unless}}
{{/if}}
{{/each}}
{{/if}}
{{#if hasRequiredFields}}
{{#each elementDefinitions}}
{{#if this.isRequired}}
{{#if this.type.codeSystemEnumName}}

{{#if this.isArray}}
    this.{{this.fieldIdentifierName}} = constructorCodeValueAsEnumCodeTypeList<{{this.type.codeSystemEnumName}}>(
      {{this.fieldIdentifierName}},
      {{this.type.codeSystemEnumName}},
      this.{{camelCase this.type.codeSystemEnumName}},
      '{{parentName}}.{{this.fieldName}}',
    );
{{else}}
    this.{{this.fieldIdentifierName}} = constructorCodeValueAsEnumCodeType<{{this.type.codeSystemEnumName}}>(
      {{this.fieldIdentifierName}},
      {{this.type.codeSystemEnumName}},
      this.{{camelCase this.type.codeSystemEnumName}},
      '{{parentName}}.{{this.fieldName}}',
    );
{{/if}}
{{else}}

    this.{{this.fieldIdentifierName}} = null;
{{#if this.isPrimitiveType}}
{{#if this.isArray}}
    if (isDefinedList<{{this.type.code}} | fhir{{upperFirst this.type.fhirDataType}}>({{this.fieldIdentifierName}})) {
      if ({{this.fieldIdentifierName}}[0] instanceof PrimitiveType) {
        this.set{{upperFirst this.fieldName}}Element({{this.fieldIdentifierName}} as {{this.type.code}}[]);
      } else {
        this.set{{upperFirst this.fieldName}}({{this.fieldIdentifierName}} as fhir{{upperFirst this.type.fhirDataType}}[]);
      }
    }
{{else}}
    if (isDefined<{{this.type.code}} | fhir{{upperFirst this.type.fhirDataType}}>({{this.fieldIdentifierName}})) {
      if ({{this.fieldIdentifierName}} instanceof PrimitiveType) {
        this.set{{upperFirst this.fieldName}}Element({{this.fieldIdentifierName}});
      } else {
        this.set{{upperFirst this.fieldName}}({{this.fieldIdentifierName}});
      }
    }
{{/if}}
{{else}}
{{#if this.isArray}}
    if (isDefinedList<{{this.type.code}}>({{this.fieldIdentifierName}})) {
      this.set{{upperFirst this.fieldName}}({{this.fieldIdentifierName}});
    }
{{else}}
    if (isDefined<{{this.type.code}}>({{this.fieldIdentifierName}})) {
      this.set{{upperFirst this.fieldName}}({{this.fieldIdentifierName}});
    }
{{/if}}
{{/if}}
{{/if}}
{{/if}}
{{/each}}
{{/if}}
  }
